from typing import List, Tuple, Optional
from reconchess import Color
from chess import Board, Piece, Move, Square
import torch

# board positions displayed if you're white
# 63 62 .. 58 57
# .     .     .
# .      .    .
# 7  6  .. 1  0

# board position displayed if you're black is different


def encode_initial_board1(my_color: Color, board: Board):
  m = torch.zeros(12, 8, 8)
  piece_map = board.piece_map()
  for (square, piece) in piece_map.items():
    # P = 1 N = 2 B = 3 R = 4 K = 6 Q = 5
    dim = (piece.piece_type - 1) + int(piece.color == my_color) * 6
    m[dim, square // 8, square % 8] = 1.
  return m

def encode_initial_board2(my_color: Color, board: Board):
  om = torch.zeros(6, 8, 8)
  mm = torch.zeros(6, 8, 8)
  piece_map = board.piece_map()
  for (square, piece) in piece_map.items():
    # P = 1 N = 2 B = 3 R = 4 K = 6 Q = 5
    dim = (piece.piece_type - 1)
    if piece.color == my_color:
      mm[dim, square // 8, square % 8] = 1.
    else:
      om[dim, square // 8, square % 8] = 1.
  return (om, mm)

def encode_initial_board3(my_color: Color, board: Board):
  om = torch.zeros(6, 8, 8)
  mm = torch.zeros(6, 8, 8)
  piece_map = board.piece_map()
  if not my_color: # black
    for (square, piece) in piece_map.items():
      # P = 1 N = 2 B = 3 R = 4 K = 6 Q = 5
      dim = (piece.piece_type - 1)
      # invert the board location for one of the players
      # so both players have the same orientation,
      # in this case both players are on top and opponent are at the buttom
      s = 63 - square
      if piece.color == my_color:
        mm[dim, s // 8, s % 8] = 1.
      else:
        om[dim, s // 8, s % 8] = 1.
  else:
    for (square, piece) in piece_map.items():
      # P = 1 N = 2 B = 3 R = 4 K = 6 Q = 5
      dim = (piece.piece_type - 1)
      s = square
      if piece.color == my_color:
        mm[dim, s // 8, s % 8] = 1.
      else:
        om[dim, s // 8, s % 8] = 1.
  return (om, mm)

# simply decay the prob. of opponent pieces, not following any game
# rules
def board_decay1(om, mm, epsilon):
  om = torch.where(mm < 1., om + epsilon, om * 0.)
  om = om * (1. - epsilon)
  return om

def update_state_oppo1(om, mm, capture: Optional[Square], oppo_piece_count):
  if capture is not None:
    cx, cy = capture // 8, capture % 8
    mm[:,cx,cy] = 0.
    om[1:,cx,cy] = 1.
    om[0,cx,cy] = 0.5 # pawn special
    om[0,max(cx-1,0),cy] += 0.5
    return (om, mm)
  else:
    om = board_decay1(om, mm, 1. / max(oppo_piece_count, 1) / 64.)
    return (om, mm)

def update_state_oppo2(om, mm, capture: Optional[Square], oppo_piece_count, my_color: Color):
  if capture is not None:
    if not my_color: # black
      c = 63 - capture
    else:
      c = capture
    cx, cy = c // 8, c % 8
    mm[:, cx, cy] = 0.
    om[1:,cx, cy] = 1.
    om[0, cx, cy] = 0.5 # pawn special
    om[0,max(cx-1,0),cy] += 0.5
    return (om, mm)
  else:
    om = board_decay1(om, mm, 1. / max(oppo_piece_count, 1) / 64.)
    return (om, mm)

# remove all speculative probability change, only keep the definite
def update_state_oppo3(om, mm, capture: Optional[Square], my_color: Color):
  if capture is not None:
    if not my_color: # black
      c = 63 - capture
    else:
      c = capture
    cx, cy = c // 8, c % 8
    mm[:, cx, cy] = 0.
  return (om, mm)

OPPO_ACTION_EVENT_DIM1 = 64 + 1 + 1

def encode_oppo_result1(capture: Optional[Square], my_color: Color):
  m = torch.zeros(OPPO_ACTION_EVENT_DIM1)
  if capture is not None:
    if not my_color: # black
      c = 63 - capture
    else:
      c = capture
    m[c] = 1.
  else:
    m[64] = 1.
  return m

def encode_null_oppo_move1():
  m = torch.zeros(OPPO_ACTION_EVENT_DIM1)
  m[65] = 1.
  return m

# determine the row diff and col diff per path square update
def move_step(rowd, cold):
  # knight move
  if (abs(rowd) == 1 and abs(cold) == 2) or (abs(rowd) == 2 and abs(cold) == 1):
    return rowd, cold
  if rowd > 0:
    rowd = 1
  elif rowd < 0:
    rowd = -1
  if cold > 0:
    cold = 1
  elif cold < 0:
    cold = -1
  return rowd, cold

# determine the number of squares that can be updated between the move
def move_squares(rowd, cold):
  # knight move
  if (abs(rowd) == 1 and abs(cold) == 2) or (abs(rowd) == 2 and abs(cold) == 1):
    return 1
  if rowd == cold or cold == 0:
    return rowd
  else:
    return cold

def clear_oppo_prob(om, move: Move):
  frow, fcol = move.from_square // 8, move.from_square % 8
  trow, tcol = move.to_square // 8, move.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  srow, scol = move_step(rowd, cold)
  n = move_squares(rowd, cold)
  for i in range(n):
    x, y = frow + i * srow, fcol + i * scol
    om[:, x, y] = 0.
  return om

def update_state_self1(om, mm, move: Move, capture: Optional[Square]):
  if move is None:
    return (om, mm)
  if capture is not None:
    om = clear_oppo_prob(om, move)
  fx, fy = move.from_square // 8, move.from_square % 8
  tx, ty = move.to_square // 8, move.to_square % 8
  mm[:, tx, ty] = mm[:, fx, fy]
  mm[:, fx, fy] = 0.
  # if the piece is a pawn and pawn gets promoted
  if move.promotion is not None:
    mm[0, tx, ty] = 0.
    mm[move.promotion-1, tx, ty] = 1.
  return (om, mm)

def update_state_self2(om, mm, move: Move, capture: Optional[Square], my_color: Color):
  if move is None:
    return (om, mm)
  if not my_color: # black
    m = Move(63 - move.from_square, 63 - move.to_square)
  else:
    m = move
  if capture is not None:
    om = clear_oppo_prob(om, m)
  fx, fy = m.from_square // 8, m.from_square % 8
  tx, ty = m.to_square // 8, m.to_square % 8
  mm[:, tx, ty] = mm[:, fx, fy]
  mm[:, fx, fy] = 0.
  if move.promotion is not None:
    mm[0, tx, ty] = 0.
    mm[move.promotion-1, tx, ty] = 1.
  return (om, mm)

SELF_ACTION_EVENT_DIM1 = (64 + 64) * 6 + 1 + 1

def encode_self_action1(board: Board, move: Optional[Move], capture: Optional[Square], my_color: Color):
  t = torch.zeros(SELF_ACTION_EVENT_DIM1)
  if capture:
    t[(64 + 64) * 6] = 1.
  if move is not None:
    if not my_color: # black
      m = Move(63 - move.from_square, 63 - move.to_square)
    else:
      m = move
    piece = board.piece_at(move.from_square)
    if piece is not None:
      t[(piece.piece_type - 1) * (64 + 64) + m.from_square] = 1.
      t[(piece.piece_type - 1) * (64 + 64) + 64 + m.to_square] = 1.
  return t

def encode_null_self_move1():
  m = torch.zeros(SELF_ACTION_EVENT_DIM1)
  m[(64 + 64) * 6 + 1] = 1.
  return m

# if a piece is detected, its prob on om is set to 1, otherwise 0 for the
# sensed squares
def update_sense1(om, sense_result: List[Tuple[Square, Optional[Piece]]]):
  for square, piece in sense_result:
    x, y = square // 8, square % 8
    if piece is None:
      om[:,x,y] = 0.
    else:
      om[:,x,y] = 0.
      om[piece.piece_type-1,x,y] = 1.
  return om

def update_sense2(om, sense_result: List[Tuple[Square, Optional[Piece]]], my_color: Color):
  if not my_color: # black
    for square, piece in sense_result:
      s = 63 - square
      x, y = s // 8, s % 8
      if piece is None:
        om[:,x,y] = 0.
      else:
        om[:,x,y] = 0.
        om[piece.piece_type-1,x,y] = 1.
  else:
    for square, piece in sense_result:
      s = square
      x, y = s // 8, s % 8
      if piece is None:
        om[:,x,y] = 0.
      else:
        om[:,x,y] = 0.
        om[piece.piece_type-1,x,y] = 1.
  return om

SENSE_EVENT_DIM1 = 9 * 64 * (6 + 1)

def encode_sense_result1(sense_result: List[Tuple[Square, Optional[Piece]]], my_color: Color):
  m = torch.zeros(SENSE_EVENT_DIM1)
  for i, r in enumerate(sense_result):
    if not my_color: # black
      s = 63 - r[0]
    else:
      s = r[0]
    if r[1] is None:
      d = 0
    else:
      d = r[1].piece_type
    m[ i * (64 * (6 + 1)) + d * 64 + s ] = 1.
  return m

# value generated should technically be never used
def encode_null_sense1():
  m = torch.zeros(SENSE_EVENT_DIM1)
  return m

MOVE_MAP = {
  # N
  (1, 0): 0,
  (2, 0): 1,
  (3, 0): 2,
  (4, 0): 3,
  (5, 0): 4,
  (6, 0): 5,
  (7, 0): 6,
  # NE
  (1, -1): 7,
  (2, -2): 8,
  (3, -3): 9,
  (4, -4): 10,
  (5, -5): 11,
  (6, -6): 12,
  (7, -7): 13,
  # E
  (0, -1): 14,
  (0, -2): 15,
  (0, -3): 16,
  (0, -4): 17,
  (0, -5): 18,
  (0, -6): 19,
  (0, -7): 20,
  # SE
  (-1, -1): 21,
  (-2, -2): 22,
  (-3, -3): 23,
  (-4, -4): 24,
  (-5, -5): 25,
  (-6, -6): 26,
  (-7, -7): 27,
  # S
  (-1, 0): 28,
  (-2, 0): 29,
  (-3, 0): 30,
  (-4, 0): 31,
  (-5, 0): 32,
  (-6, 0): 33,
  (-7, 0): 34,
  # SW
  (-1, 1): 35,
  (-2, 2): 36,
  (-3, 3): 37,
  (-4, 4): 38,
  (-5, 5): 39,
  (-6, 6): 40,
  (-7, 7): 41,
  # W
  (0, 1): 42,
  (0, 2): 43,
  (0, 3): 44,
  (0, 4): 45,
  (0, 5): 46,
  (0, 6): 47,
  (0, 7): 48,
  # NW
  (1, 1): 49,
  (2, 2): 50,
  (3, 3): 51,
  (4, 4): 52,
  (5, 5): 53,
  (6, 6): 54,
  (7, 7): 55,
  # Knight Moves
  ( 2, -1): 56,
  ( 1, -2): 57,
  (-1, -2): 58,
  (-2, -1): 59,
  (-2,  1): 60,
  (-1,  2): 61,
  ( 1,  2): 62,
  ( 2,  1): 63,
}

INV_MOVE_MAP = {
  # N
  0:  (1, 0),
  1:  (2, 0),
  2:  (3, 0),
  3:  (4, 0),
  4:  (5, 0),
  5:  (6, 0),
  6:  (7, 0),
  # NE
  7:  (1, -1),
  8:  (2, -2),
  9:  (3, -3),
  10: (4, -4),
  11: (5, -5),
  12: (6, -6),
  13: (7, -7),
  # E
  14: (0, -1),
  15: (0, -2),
  16: (0, -3),
  17: (0, -4),
  18: (0, -5),
  19: (0, -6),
  20: (0, -7),
  # SE
  21: (-1, -1),
  22: (-2, -2),
  23: (-3, -3),
  24: (-4, -4),
  25: (-5, -5),
  26: (-6, -6),
  27: (-7, -7),
  # S
  28: (-1, 0),
  29: (-2, 0),
  30: (-3, 0),
  31: (-4, 0),
  32: (-5, 0),
  33: (-6, 0),
  34: (-7, 0),
  # SW
  35: (-1, 1),
  36: (-2, 2),
  37: (-3, 3),
  38: (-4, 4),
  39: (-5, 5),
  40: (-6, 6),
  41: (-7, 7),
  # W
  42: (0, 1),
  43: (0, 2),
  44: (0, 3),
  45: (0, 4),
  46: (0, 5),
  47: (0, 6),
  48: (0, 7),
  # NW
  49: (1, 1),
  50: (2, 2),
  51: (3, 3),
  52: (4, 4),
  53: (5, 5),
  54: (6, 6),
  55: (7, 7),
  # Knight Moves
  56: ( 2, -1),
  57: ( 1, -2),
  58: (-1, -2),
  59: (-2, -1),
  60: (-2,  1),
  61: (-1,  2),
  62: ( 1,  2),
  63: ( 2,  1),
}

MOVE_MAP_SIZE_TOTAL = 1792

MOVE_MAP_SIZE = {
  23, 24, 25, 25, 25, 25, 24, 23,
  24, 27, 29, 29, 29, 29, 27, 24,
  25, 29, 33, 33, 33, 33, 29, 25,
  25, 29, 33, 35, 35, 33, 29, 25,
  25, 29, 33, 35, 35, 33, 29, 25,
  25, 29, 33, 33, 33, 33, 29, 25,
  24, 27, 29, 29, 29, 29, 27, 24,
  23, 24, 25, 25, 25, 25, 24, 23,
}

MOVE_MAP_0 = {
  ( 0, 1): 0,
  ( 0, 2): 1,
  ( 0, 3): 2,
  ( 0, 4): 3,
  ( 0, 5): 4,
  ( 0, 6): 5,
  ( 0, 7): 6,
  ( 1, 1): 7,
  ( 2, 2): 8,
  ( 3, 3): 9,
  ( 4, 4): 10,
  ( 5, 5): 11,
  ( 6, 6): 12,
  ( 7, 7): 13,
  ( 1, 0): 14,
  ( 2, 0): 15,
  ( 3, 0): 16,
  ( 4, 0): 17,
  ( 5, 0): 18,
  ( 6, 0): 19,
  ( 7, 0): 20,
  ( 1, 2): 21,
  ( 2, 1): 22,
}

MOVE_MAP_1 = {
  ( 0, 1): 23,
  ( 0, 2): 24,
  ( 0, 3): 25,
  ( 0, 4): 26,
  ( 0, 5): 27,
  ( 0, 6): 28,
  ( 1, 1): 29,
  ( 2, 2): 30,
  ( 3, 3): 31,
  ( 4, 4): 32,
  ( 5, 5): 33,
  ( 6, 6): 34,
  ( 1, 0): 35,
  ( 2, 0): 36,
  ( 3, 0): 37,
  ( 4, 0): 38,
  ( 5, 0): 39,
  ( 6, 0): 40,
  ( 7, 0): 41,
  ( 1,-1): 42,
  ( 0,-1): 43,
  ( 1, 2): 44,
  ( 2, 1): 45,
  ( 2,-1): 46,
}

MOVE_MAP_2 = {
  ( 0, 1): 47,
  ( 0, 2): 48,
  ( 0, 3): 49,
  ( 0, 4): 50,
  ( 0, 5): 51,
  ( 1, 1): 52,
  ( 2, 2): 53,
  ( 3, 3): 54,
  ( 4, 4): 55,
  ( 5, 5): 56,
  ( 1, 0): 57,
  ( 2, 0): 58,
  ( 3, 0): 59,
  ( 4, 0): 60,
  ( 5, 0): 61,
  ( 6, 0): 62,
  ( 7, 0): 63,
  ( 1,-1): 64,
  ( 2,-2): 65,
  ( 0,-1): 66,
  ( 0,-2): 67,
  ( 1, 2): 68,
  ( 2, 1): 69,
  ( 2,-1): 70,
  ( 1,-2): 71,
}

MOVE_MAP_3 = {
  ( 0, 1): 72,
  ( 0, 2): 73,
  ( 0, 3): 74,
  ( 0, 4): 75,
  ( 1, 1): 76,
  ( 2, 2): 77,
  ( 3, 3): 78,
  ( 4, 4): 79,
  ( 1, 0): 80,
  ( 2, 0): 81,
  ( 3, 0): 82,
  ( 4, 0): 83,
  ( 5, 0): 84,
  ( 6, 0): 85,
  ( 7, 0): 86,
  ( 1,-1): 87,
  ( 2,-2): 88,
  ( 3,-3): 89,
  ( 0,-1): 90,
  ( 0,-2): 91,
  ( 0,-3): 92,
  ( 1, 2): 93,
  ( 2, 1): 94,
  ( 2,-1): 95,
  ( 1,-2): 96,
}

MOVE_MAP_4 = {
  ( 0, 1): 97,
  ( 0, 2): 98,
  ( 0, 3): 99,
  ( 1, 1): 100,
  ( 2, 2): 101,
  ( 3, 3): 102,
  ( 1, 0): 103,
  ( 2, 0): 104,
  ( 3, 0): 105,
  ( 4, 0): 106,
  ( 5, 0): 107,
  ( 6, 0): 108,
  ( 7, 0): 109,
  ( 1,-1): 110,
  ( 2,-2): 111,
  ( 3,-3): 112,
  ( 4,-4): 113,
  ( 0,-1): 114,
  ( 0,-2): 115,
  ( 0,-3): 116,
  ( 0,-4): 117,
  ( 1, 2): 118,
  ( 2, 1): 119,
  ( 2,-1): 120,
  ( 1,-2): 121,
}

MOVE_MAP_5 = {
  ( 0, 1): 122,
  ( 0, 2): 123,
  ( 1, 1): 124,
  ( 2, 2): 125,
  ( 1, 0): 126,
  ( 2, 0): 127,
  ( 3, 0): 128,
  ( 4, 0): 129,
  ( 5, 0): 130,
  ( 6, 0): 131,
  ( 7, 0): 132,
  ( 1,-1): 133,
  ( 2,-2): 134,
  ( 3,-3): 135,
  ( 4,-4): 136,
  ( 5,-5): 137,
  ( 0,-1): 138,
  ( 0,-2): 139,
  ( 0,-3): 140,
  ( 0,-4): 141,
  ( 0,-5): 142,
  ( 1, 2): 143,
  ( 2, 1): 144,
  ( 2,-1): 145,
  ( 1,-2): 146,
}

MOVE_MAP_6 = {
  ( 0, 1): 147,
  ( 1, 1): 148,
  ( 1, 0): 149,
  ( 2, 0): 150,
  ( 3, 0): 151,
  ( 4, 0): 152,
  ( 5, 0): 153,
  ( 6, 0): 154,
  ( 7, 0): 155,
  ( 1,-1): 156,
  ( 2,-2): 157,
  ( 3,-3): 158,
  ( 4,-4): 159,
  ( 5,-5): 160,
  ( 6,-6): 161,
  ( 0,-1): 162,
  ( 0,-2): 163,
  ( 0,-3): 164,
  ( 0,-4): 165,
  ( 0,-5): 166,
  ( 0,-6): 167,
  ( 2, 1): 168,
  ( 2,-1): 169,
  ( 1,-2): 170,
}

MOVE_MAP_7 = {
  ( 1, 0): 171,
  ( 2, 0): 172,
  ( 3, 0): 173,
  ( 4, 0): 174,
  ( 5, 0): 175,
  ( 6, 0): 176,
  ( 7, 0): 177,
  ( 1,-1): 178,
  ( 2,-2): 179,
  ( 3,-3): 180,
  ( 4,-4): 181,
  ( 5,-5): 182,
  ( 6,-6): 183,
  ( 7,-7): 184,
  ( 0,-1): 185,
  ( 0,-2): 186,
  ( 0,-3): 187,
  ( 0,-4): 188,
  ( 0,-5): 189,
  ( 0,-6): 190,
  ( 0,-7): 191,
  ( 2,-1): 192,
  ( 1,-2): 193,
}

MOVE_MAP_8 = {
  (-1, 0): 194,
  (-1, 1): 195,
  ( 0, 1): 196,
  ( 0, 2): 197,
  ( 0, 3): 198,
  ( 0, 4): 199,
  ( 0, 5): 200,
  ( 0, 6): 201,
  ( 0, 7): 202,
  ( 1, 1): 203,
  ( 2, 2): 204,
  ( 3, 3): 205,
  ( 4, 4): 206,
  ( 5, 5): 207,
  ( 6, 6): 208,
  ( 1, 0): 209,
  ( 2, 0): 210,
  ( 3, 0): 211,
  ( 4, 0): 212,
  ( 5, 0): 213,
  ( 6, 0): 214,
  (-1, 2): 215,
  ( 1, 2): 216,
  ( 2, 1): 217,
}

MOVE_MAP_9 = {
  (-1, 0): 218,
  (-1, 1): 219,
  ( 0, 1): 220,
  ( 0, 2): 221,
  ( 0, 3): 222,
  ( 0, 4): 223,
  ( 0, 5): 224,
  ( 0, 6): 225,
  ( 1, 1): 226,
  ( 2, 2): 227,
  ( 3, 3): 228,
  ( 4, 4): 229,
  ( 5, 5): 230,
  ( 6, 6): 231,
  ( 1, 0): 232,
  ( 2, 0): 233,
  ( 3, 0): 234,
  ( 4, 0): 235,
  ( 5, 0): 236,
  ( 6, 0): 237,
  ( 1,-1): 238,
  ( 0,-1): 239,
  (-1,-1): 240,
  (-1, 2): 241,
  ( 1, 2): 242,
  ( 2, 1): 243,
  ( 2,-1): 244,
}

MOVE_MAP_10 = {
  (-1, 0): 245,
  (-1, 1): 246,
  ( 0, 1): 247,
  ( 0, 2): 248,
  ( 0, 3): 249,
  ( 0, 4): 250,
  ( 0, 5): 251,
  ( 1, 1): 252,
  ( 2, 2): 253,
  ( 3, 3): 254,
  ( 4, 4): 255,
  ( 5, 5): 256,
  ( 1, 0): 257,
  ( 2, 0): 258,
  ( 3, 0): 259,
  ( 4, 0): 260,
  ( 5, 0): 261,
  ( 6, 0): 262,
  ( 1,-1): 263,
  ( 2,-2): 264,
  ( 0,-1): 265,
  ( 0,-2): 266,
  (-1,-1): 267,
  (-1, 2): 268,
  ( 1, 2): 269,
  ( 2, 1): 270,
  ( 2,-1): 271,
  ( 1,-2): 272,
  (-1,-2): 273,
}

MOVE_MAP_11 = {
  (-1, 0): 274,
  (-1, 1): 275,
  ( 0, 1): 276,
  ( 0, 2): 277,
  ( 0, 3): 278,
  ( 0, 4): 279,
  ( 1, 1): 280,
  ( 2, 2): 281,
  ( 3, 3): 282,
  ( 4, 4): 283,
  ( 1, 0): 284,
  ( 2, 0): 285,
  ( 3, 0): 286,
  ( 4, 0): 287,
  ( 5, 0): 288,
  ( 6, 0): 289,
  ( 1,-1): 290,
  ( 2,-2): 291,
  ( 3,-3): 292,
  ( 0,-1): 293,
  ( 0,-2): 294,
  ( 0,-3): 295,
  (-1,-1): 296,
  (-1, 2): 297,
  ( 1, 2): 298,
  ( 2, 1): 299,
  ( 2,-1): 300,
  ( 1,-2): 301,
  (-1,-2): 302,
}

MOVE_MAP_12 = {
  (-1, 0): 303,
  (-1, 1): 304,
  ( 0, 1): 305,
  ( 0, 2): 306,
  ( 0, 3): 307,
  ( 1, 1): 308,
  ( 2, 2): 309,
  ( 3, 3): 310,
  ( 1, 0): 311,
  ( 2, 0): 312,
  ( 3, 0): 313,
  ( 4, 0): 314,
  ( 5, 0): 315,
  ( 6, 0): 316,
  ( 1,-1): 317,
  ( 2,-2): 318,
  ( 3,-3): 319,
  ( 4,-4): 320,
  ( 0,-1): 321,
  ( 0,-2): 322,
  ( 0,-3): 323,
  ( 0,-4): 324,
  (-1,-1): 325,
  (-1, 2): 326,
  ( 1, 2): 327,
  ( 2, 1): 328,
  ( 2,-1): 329,
  ( 1,-2): 330,
  (-1,-2): 331,
}

MOVE_MAP_13 = {
  (-1, 0): 332,
  (-1, 1): 333,
  ( 0, 1): 334,
  ( 0, 2): 335,
  ( 1, 1): 336,
  ( 2, 2): 337,
  ( 1, 0): 338,
  ( 2, 0): 339,
  ( 3, 0): 340,
  ( 4, 0): 341,
  ( 5, 0): 342,
  ( 6, 0): 343,
  ( 1,-1): 344,
  ( 2,-2): 345,
  ( 3,-3): 346,
  ( 4,-4): 347,
  ( 5,-5): 348,
  ( 0,-1): 349,
  ( 0,-2): 350,
  ( 0,-3): 351,
  ( 0,-4): 352,
  ( 0,-5): 353,
  (-1,-1): 354,
  (-1, 2): 355,
  ( 1, 2): 356,
  ( 2, 1): 357,
  ( 2,-1): 358,
  ( 1,-2): 359,
  (-1,-2): 360,
}

MOVE_MAP_14 = {
  (-1, 0): 361,
  (-1, 1): 362,
  ( 0, 1): 363,
  ( 1, 1): 364,
  ( 1, 0): 365,
  ( 2, 0): 366,
  ( 3, 0): 367,
  ( 4, 0): 368,
  ( 5, 0): 369,
  ( 6, 0): 370,
  ( 1,-1): 371,
  ( 2,-2): 372,
  ( 3,-3): 373,
  ( 4,-4): 374,
  ( 5,-5): 375,
  ( 6,-6): 376,
  ( 0,-1): 377,
  ( 0,-2): 378,
  ( 0,-3): 379,
  ( 0,-4): 380,
  ( 0,-5): 381,
  ( 0,-6): 382,
  (-1,-1): 383,
  ( 2, 1): 384,
  ( 2,-1): 385,
  ( 1,-2): 386,
  (-1,-2): 387,
}

MOVE_MAP_15 = {
  (-1, 0): 388,
  ( 1, 0): 389,
  ( 2, 0): 390,
  ( 3, 0): 391,
  ( 4, 0): 392,
  ( 5, 0): 393,
  ( 6, 0): 394,
  ( 1,-1): 395,
  ( 2,-2): 396,
  ( 3,-3): 397,
  ( 4,-4): 398,
  ( 5,-5): 399,
  ( 6,-6): 400,
  ( 0,-1): 401,
  ( 0,-2): 402,
  ( 0,-3): 403,
  ( 0,-4): 404,
  ( 0,-5): 405,
  ( 0,-6): 406,
  ( 0,-7): 407,
  (-1,-1): 408,
  ( 2,-1): 409,
  ( 1,-2): 410,
  (-1,-2): 411,
}

MOVE_MAP_16 = {
  (-1, 0): 412,
  (-2, 0): 413,
  (-1, 1): 414,
  (-2, 2): 415,
  ( 0, 1): 416,
  ( 0, 2): 417,
  ( 0, 3): 418,
  ( 0, 4): 419,
  ( 0, 5): 420,
  ( 0, 6): 421,
  ( 0, 7): 422,
  ( 1, 1): 423,
  ( 2, 2): 424,
  ( 3, 3): 425,
  ( 4, 4): 426,
  ( 5, 5): 427,
  ( 1, 0): 428,
  ( 2, 0): 429,
  ( 3, 0): 430,
  ( 4, 0): 431,
  ( 5, 0): 432,
  (-2, 1): 433,
  (-1, 2): 434,
  ( 1, 2): 435,
  ( 2, 1): 436,
}

MOVE_MAP_17 = {
  (-1, 0): 437,
  (-2, 0): 438,
  (-1, 1): 439,
  (-2, 2): 440,
  ( 0, 1): 441,
  ( 0, 2): 442,
  ( 0, 3): 443,
  ( 0, 4): 444,
  ( 0, 5): 445,
  ( 0, 6): 446,
  ( 1, 1): 447,
  ( 2, 2): 448,
  ( 3, 3): 449,
  ( 4, 4): 450,
  ( 5, 5): 451,
  ( 1, 0): 452,
  ( 2, 0): 453,
  ( 3, 0): 454,
  ( 4, 0): 455,
  ( 5, 0): 456,
  ( 1,-1): 457,
  ( 0,-1): 458,
  (-1,-1): 459,
  (-2, 1): 460,
  (-1, 2): 461,
  ( 1, 2): 462,
  ( 2, 1): 463,
  ( 2,-1): 464,
  (-2,-1): 465,
}

MOVE_MAP_18 = {
  (-1, 0): 466,
  (-2, 0): 467,
  (-1, 1): 468,
  (-2, 2): 469,
  ( 0, 1): 470,
  ( 0, 2): 471,
  ( 0, 3): 472,
  ( 0, 4): 473,
  ( 0, 5): 474,
  ( 1, 1): 475,
  ( 2, 2): 476,
  ( 3, 3): 477,
  ( 4, 4): 478,
  ( 5, 5): 479,
  ( 1, 0): 480,
  ( 2, 0): 481,
  ( 3, 0): 482,
  ( 4, 0): 483,
  ( 5, 0): 484,
  ( 1,-1): 485,
  ( 2,-2): 486,
  ( 0,-1): 487,
  ( 0,-2): 488,
  (-1,-1): 489,
  (-2,-2): 490,
  (-2, 1): 491,
  (-1, 2): 492,
  ( 1, 2): 493,
  ( 2, 1): 494,
  ( 2,-1): 495,
  ( 1,-2): 496,
  (-1,-2): 497,
  (-2,-1): 498,
}

MOVE_MAP_19 = {
  (-1, 0): 499,
  (-2, 0): 500,
  (-1, 1): 501,
  (-2, 2): 502,
  ( 0, 1): 503,
  ( 0, 2): 504,
  ( 0, 3): 505,
  ( 0, 4): 506,
  ( 1, 1): 507,
  ( 2, 2): 508,
  ( 3, 3): 509,
  ( 4, 4): 510,
  ( 1, 0): 511,
  ( 2, 0): 512,
  ( 3, 0): 513,
  ( 4, 0): 514,
  ( 5, 0): 515,
  ( 1,-1): 516,
  ( 2,-2): 517,
  ( 3,-3): 518,
  ( 0,-1): 519,
  ( 0,-2): 520,
  ( 0,-3): 521,
  (-1,-1): 522,
  (-2,-2): 523,
  (-2, 1): 524,
  (-1, 2): 525,
  ( 1, 2): 526,
  ( 2, 1): 527,
  ( 2,-1): 528,
  ( 1,-2): 529,
  (-1,-2): 530,
  (-2,-1): 531,
}

MOVE_MAP_20 = {
  (-1, 0): 532,
  (-2, 0): 533,
  (-1, 1): 534,
  (-2, 2): 535,
  ( 0, 1): 536,
  ( 0, 2): 537,
  ( 0, 3): 538,
  ( 1, 1): 539,
  ( 2, 2): 540,
  ( 3, 3): 541,
  ( 1, 0): 542,
  ( 2, 0): 543,
  ( 3, 0): 544,
  ( 4, 0): 545,
  ( 5, 0): 546,
  ( 1,-1): 547,
  ( 2,-2): 548,
  ( 3,-3): 549,
  ( 4,-4): 550,
  ( 0,-1): 551,
  ( 0,-2): 552,
  ( 0,-3): 553,
  ( 0,-4): 554,
  (-1,-1): 555,
  (-2,-2): 556,
  (-2, 1): 557,
  (-1, 2): 558,
  ( 1, 2): 559,
  ( 2, 1): 560,
  ( 2,-1): 561,
  ( 1,-2): 562,
  (-1,-2): 563,
  (-2,-1): 564,
}

MOVE_MAP_21 = {
  (-1, 0): 565,
  (-2, 0): 566,
  (-1, 1): 567,
  (-2, 2): 568,
  ( 0, 1): 569,
  ( 0, 2): 570,
  ( 1, 1): 571,
  ( 2, 2): 572,
  ( 1, 0): 573,
  ( 2, 0): 574,
  ( 3, 0): 575,
  ( 4, 0): 576,
  ( 5, 0): 577,
  ( 1,-1): 578,
  ( 2,-2): 579,
  ( 3,-3): 580,
  ( 4,-4): 581,
  ( 5,-5): 582,
  ( 0,-1): 583,
  ( 0,-2): 584,
  ( 0,-3): 585,
  ( 0,-4): 586,
  ( 0,-5): 587,
  (-1,-1): 588,
  (-2,-2): 589,
  (-2, 1): 590,
  (-1, 2): 591,
  ( 1, 2): 592,
  ( 2, 1): 593,
  ( 2,-1): 594,
  ( 1,-2): 595,
  (-1,-2): 596,
  (-2,-1): 597,
}

MOVE_MAP_22 = {
  (-1, 0): 598,
  (-2, 0): 599,
  (-1, 1): 600,
  ( 0, 1): 601,
  ( 1, 1): 602,
  ( 1, 0): 603,
  ( 2, 0): 604,
  ( 3, 0): 605,
  ( 4, 0): 606,
  ( 5, 0): 607,
  ( 1,-1): 608,
  ( 2,-2): 609,
  ( 3,-3): 610,
  ( 4,-4): 611,
  ( 5,-5): 612,
  ( 0,-1): 613,
  ( 0,-2): 614,
  ( 0,-3): 615,
  ( 0,-4): 616,
  ( 0,-5): 617,
  ( 0,-6): 618,
  (-1,-1): 619,
  (-2,-2): 620,
  (-2, 1): 621,
  ( 2, 1): 622,
  ( 2,-1): 623,
  ( 1,-2): 624,
  (-1,-2): 625,
  (-2,-1): 626,
}

MOVE_MAP_23 = {
  (-1, 0): 627,
  (-2, 0): 628,
  ( 1, 0): 629,
  ( 2, 0): 630,
  ( 3, 0): 631,
  ( 4, 0): 632,
  ( 5, 0): 633,
  ( 1,-1): 634,
  ( 2,-2): 635,
  ( 3,-3): 636,
  ( 4,-4): 637,
  ( 5,-5): 638,
  ( 0,-1): 639,
  ( 0,-2): 640,
  ( 0,-3): 641,
  ( 0,-4): 642,
  ( 0,-5): 643,
  ( 0,-6): 644,
  ( 0,-7): 645,
  (-1,-1): 646,
  (-2,-2): 647,
  ( 2,-1): 648,
  ( 1,-2): 649,
  (-1,-2): 650,
  (-2,-1): 651,
}

MOVE_MAP_24 = {
  (-1, 0): 652,
  (-2, 0): 653,
  (-3, 0): 654,
  (-1, 1): 655,
  (-2, 2): 656,
  (-3, 3): 657,
  ( 0, 1): 658,
  ( 0, 2): 659,
  ( 0, 3): 660,
  ( 0, 4): 661,
  ( 0, 5): 662,
  ( 0, 6): 663,
  ( 0, 7): 664,
  ( 1, 1): 665,
  ( 2, 2): 666,
  ( 3, 3): 667,
  ( 4, 4): 668,
  ( 1, 0): 669,
  ( 2, 0): 670,
  ( 3, 0): 671,
  ( 4, 0): 672,
  (-2, 1): 673,
  (-1, 2): 674,
  ( 1, 2): 675,
  ( 2, 1): 676,
}

MOVE_MAP_25 = {
  (-1, 0): 677,
  (-2, 0): 678,
  (-3, 0): 679,
  (-1, 1): 680,
  (-2, 2): 681,
  (-3, 3): 682,
  ( 0, 1): 683,
  ( 0, 2): 684,
  ( 0, 3): 685,
  ( 0, 4): 686,
  ( 0, 5): 687,
  ( 0, 6): 688,
  ( 1, 1): 689,
  ( 2, 2): 690,
  ( 3, 3): 691,
  ( 4, 4): 692,
  ( 1, 0): 693,
  ( 2, 0): 694,
  ( 3, 0): 695,
  ( 4, 0): 696,
  ( 1,-1): 697,
  ( 0,-1): 698,
  (-1,-1): 699,
  (-2, 1): 700,
  (-1, 2): 701,
  ( 1, 2): 702,
  ( 2, 1): 703,
  ( 2,-1): 704,
  (-2,-1): 705,
}

MOVE_MAP_26 = {
  (-1, 0): 706,
  (-2, 0): 707,
  (-3, 0): 708,
  (-1, 1): 709,
  (-2, 2): 710,
  (-3, 3): 711,
  ( 0, 1): 712,
  ( 0, 2): 713,
  ( 0, 3): 714,
  ( 0, 4): 715,
  ( 0, 5): 716,
  ( 1, 1): 717,
  ( 2, 2): 718,
  ( 3, 3): 719,
  ( 4, 4): 720,
  ( 1, 0): 721,
  ( 2, 0): 722,
  ( 3, 0): 723,
  ( 4, 0): 724,
  ( 1,-1): 725,
  ( 2,-2): 726,
  ( 0,-1): 727,
  ( 0,-2): 728,
  (-1,-1): 729,
  (-2,-2): 730,
  (-2, 1): 731,
  (-1, 2): 732,
  ( 1, 2): 733,
  ( 2, 1): 734,
  ( 2,-1): 735,
  ( 1,-2): 736,
  (-1,-2): 737,
  (-2,-1): 738,
}

MOVE_MAP_27 = {
  (-1, 0): 739,
  (-2, 0): 740,
  (-3, 0): 741,
  (-1, 1): 742,
  (-2, 2): 743,
  (-3, 3): 744,
  ( 0, 1): 745,
  ( 0, 2): 746,
  ( 0, 3): 747,
  ( 0, 4): 748,
  ( 1, 1): 749,
  ( 2, 2): 750,
  ( 3, 3): 751,
  ( 4, 4): 752,
  ( 1, 0): 753,
  ( 2, 0): 754,
  ( 3, 0): 755,
  ( 4, 0): 756,
  ( 1,-1): 757,
  ( 2,-2): 758,
  ( 3,-3): 759,
  ( 0,-1): 760,
  ( 0,-2): 761,
  ( 0,-3): 762,
  (-1,-1): 763,
  (-2,-2): 764,
  (-3,-3): 765,
  (-2, 1): 766,
  (-1, 2): 767,
  ( 1, 2): 768,
  ( 2, 1): 769,
  ( 2,-1): 770,
  ( 1,-2): 771,
  (-1,-2): 772,
  (-2,-1): 773,
}

MOVE_MAP_28 = {
  (-1, 0): 774,
  (-2, 0): 775,
  (-3, 0): 776,
  (-1, 1): 777,
  (-2, 2): 778,
  (-3, 3): 779,
  ( 0, 1): 780,
  ( 0, 2): 781,
  ( 0, 3): 782,
  ( 1, 1): 783,
  ( 2, 2): 784,
  ( 3, 3): 785,
  ( 1, 0): 786,
  ( 2, 0): 787,
  ( 3, 0): 788,
  ( 4, 0): 789,
  ( 1,-1): 790,
  ( 2,-2): 791,
  ( 3,-3): 792,
  ( 4,-4): 793,
  ( 0,-1): 794,
  ( 0,-2): 795,
  ( 0,-3): 796,
  ( 0,-4): 797,
  (-1,-1): 798,
  (-2,-2): 799,
  (-3,-3): 800,
  (-2, 1): 801,
  (-1, 2): 802,
  ( 1, 2): 803,
  ( 2, 1): 804,
  ( 2,-1): 805,
  ( 1,-2): 806,
  (-1,-2): 807,
  (-2,-1): 808,
}

MOVE_MAP_29 = {
  (-1, 0): 809,
  (-2, 0): 810,
  (-3, 0): 811,
  (-1, 1): 812,
  (-2, 2): 813,
  ( 0, 1): 814,
  ( 0, 2): 815,
  ( 1, 1): 816,
  ( 2, 2): 817,
  ( 1, 0): 818,
  ( 2, 0): 819,
  ( 3, 0): 820,
  ( 4, 0): 821,
  ( 1,-1): 822,
  ( 2,-2): 823,
  ( 3,-3): 824,
  ( 4,-4): 825,
  ( 0,-1): 826,
  ( 0,-2): 827,
  ( 0,-3): 828,
  ( 0,-4): 829,
  ( 0,-5): 830,
  (-1,-1): 831,
  (-2,-2): 832,
  (-3,-3): 833,
  (-2, 1): 834,
  (-1, 2): 835,
  ( 1, 2): 836,
  ( 2, 1): 837,
  ( 2,-1): 838,
  ( 1,-2): 839,
  (-1,-2): 840,
  (-2,-1): 841,
}

MOVE_MAP_30 = {
  (-1, 0): 842,
  (-2, 0): 843,
  (-3, 0): 844,
  (-1, 1): 845,
  ( 0, 1): 846,
  ( 1, 1): 847,
  ( 1, 0): 848,
  ( 2, 0): 849,
  ( 3, 0): 850,
  ( 4, 0): 851,
  ( 1,-1): 852,
  ( 2,-2): 853,
  ( 3,-3): 854,
  ( 4,-4): 855,
  ( 0,-1): 856,
  ( 0,-2): 857,
  ( 0,-3): 858,
  ( 0,-4): 859,
  ( 0,-5): 860,
  ( 0,-6): 861,
  (-1,-1): 862,
  (-2,-2): 863,
  (-3,-3): 864,
  (-2, 1): 865,
  ( 2, 1): 866,
  ( 2,-1): 867,
  ( 1,-2): 868,
  (-1,-2): 869,
  (-2,-1): 870,
}

MOVE_MAP_31 = {
  (-1, 0): 871,
  (-2, 0): 872,
  (-3, 0): 873,
  ( 1, 0): 874,
  ( 2, 0): 875,
  ( 3, 0): 876,
  ( 4, 0): 877,
  ( 1,-1): 878,
  ( 2,-2): 879,
  ( 3,-3): 880,
  ( 4,-4): 881,
  ( 0,-1): 882,
  ( 0,-2): 883,
  ( 0,-3): 884,
  ( 0,-4): 885,
  ( 0,-5): 886,
  ( 0,-6): 887,
  ( 0,-7): 888,
  (-1,-1): 889,
  (-2,-2): 890,
  (-3,-3): 891,
  ( 2,-1): 892,
  ( 1,-2): 893,
  (-1,-2): 894,
  (-2,-1): 895,
}

MOVE_MAP_32 = {
  (-1, 0): 896,
  (-2, 0): 897,
  (-3, 0): 898,
  (-4, 0): 899,
  (-1, 1): 900,
  (-2, 2): 901,
  (-3, 3): 902,
  (-4, 4): 903,
  ( 0, 1): 904,
  ( 0, 2): 905,
  ( 0, 3): 906,
  ( 0, 4): 907,
  ( 0, 5): 908,
  ( 0, 6): 909,
  ( 0, 7): 910,
  ( 1, 1): 911,
  ( 2, 2): 912,
  ( 3, 3): 913,
  ( 1, 0): 914,
  ( 2, 0): 915,
  ( 3, 0): 916,
  (-2, 1): 917,
  (-1, 2): 918,
  ( 1, 2): 919,
  ( 2, 1): 920,
}

MOVE_MAP_33 = {
  (-1, 0): 921,
  (-2, 0): 922,
  (-3, 0): 923,
  (-4, 0): 924,
  (-1, 1): 925,
  (-2, 2): 926,
  (-3, 3): 927,
  (-4, 4): 928,
  ( 0, 1): 929,
  ( 0, 2): 930,
  ( 0, 3): 931,
  ( 0, 4): 932,
  ( 0, 5): 933,
  ( 0, 6): 934,
  ( 1, 1): 935,
  ( 2, 2): 936,
  ( 3, 3): 937,
  ( 1, 0): 938,
  ( 2, 0): 939,
  ( 3, 0): 940,
  ( 1,-1): 941,
  ( 0,-1): 942,
  (-1,-1): 943,
  (-2, 1): 944,
  (-1, 2): 945,
  ( 1, 2): 946,
  ( 2, 1): 947,
  ( 2,-1): 948,
  (-2,-1): 949,
}

MOVE_MAP_34 = {
  (-1, 0): 950,
  (-2, 0): 951,
  (-3, 0): 952,
  (-4, 0): 953,
  (-1, 1): 954,
  (-2, 2): 955,
  (-3, 3): 956,
  (-4, 4): 957,
  ( 0, 1): 958,
  ( 0, 2): 959,
  ( 0, 3): 960,
  ( 0, 4): 961,
  ( 0, 5): 962,
  ( 1, 1): 963,
  ( 2, 2): 964,
  ( 3, 3): 965,
  ( 1, 0): 966,
  ( 2, 0): 967,
  ( 3, 0): 968,
  ( 1,-1): 969,
  ( 2,-2): 970,
  ( 0,-1): 971,
  ( 0,-2): 972,
  (-1,-1): 973,
  (-2,-2): 974,
  (-2, 1): 975,
  (-1, 2): 976,
  ( 1, 2): 977,
  ( 2, 1): 978,
  ( 2,-1): 979,
  ( 1,-2): 980,
  (-1,-2): 981,
  (-2,-1): 982,
}

MOVE_MAP_35 = {
  (-1, 0): 983,
  (-2, 0): 984,
  (-3, 0): 985,
  (-4, 0): 986,
  (-1, 1): 987,
  (-2, 2): 988,
  (-3, 3): 989,
  (-4, 4): 990,
  ( 0, 1): 991,
  ( 0, 2): 992,
  ( 0, 3): 993,
  ( 0, 4): 994,
  ( 1, 1): 995,
  ( 2, 2): 996,
  ( 3, 3): 997,
  ( 1, 0): 998,
  ( 2, 0): 999,
  ( 3, 0): 1000,
  ( 1,-1): 1001,
  ( 2,-2): 1002,
  ( 3,-3): 1003,
  ( 0,-1): 1004,
  ( 0,-2): 1005,
  ( 0,-3): 1006,
  (-1,-1): 1007,
  (-2,-2): 1008,
  (-3,-3): 1009,
  (-2, 1): 1010,
  (-1, 2): 1011,
  ( 1, 2): 1012,
  ( 2, 1): 1013,
  ( 2,-1): 1014,
  ( 1,-2): 1015,
  (-1,-2): 1016,
  (-2,-1): 1017,
}

MOVE_MAP_36 = {
  (-1, 0): 1018,
  (-2, 0): 1019,
  (-3, 0): 1020,
  (-4, 0): 1021,
  (-1, 1): 1022,
  (-2, 2): 1023,
  (-3, 3): 1024,
  ( 0, 1): 1025,
  ( 0, 2): 1026,
  ( 0, 3): 1027,
  ( 1, 1): 1028,
  ( 2, 2): 1029,
  ( 3, 3): 1030,
  ( 1, 0): 1031,
  ( 2, 0): 1032,
  ( 3, 0): 1033,
  ( 1,-1): 1034,
  ( 2,-2): 1035,
  ( 3,-3): 1036,
  ( 0,-1): 1037,
  ( 0,-2): 1038,
  ( 0,-3): 1039,
  ( 0,-4): 1040,
  (-1,-1): 1041,
  (-2,-2): 1042,
  (-3,-3): 1043,
  (-4,-4): 1044,
  (-2, 1): 1045,
  (-1, 2): 1046,
  ( 1, 2): 1047,
  ( 2, 1): 1048,
  ( 2,-1): 1049,
  ( 1,-2): 1050,
  (-1,-2): 1051,
  (-2,-1): 1052,
}

MOVE_MAP_37 = {
  (-1, 0): 1053,
  (-2, 0): 1054,
  (-3, 0): 1055,
  (-4, 0): 1056,
  (-1, 1): 1057,
  (-2, 2): 1058,
  ( 0, 1): 1059,
  ( 0, 2): 1060,
  ( 1, 1): 1061,
  ( 2, 2): 1062,
  ( 1, 0): 1063,
  ( 2, 0): 1064,
  ( 3, 0): 1065,
  ( 1,-1): 1066,
  ( 2,-2): 1067,
  ( 3,-3): 1068,
  ( 0,-1): 1069,
  ( 0,-2): 1070,
  ( 0,-3): 1071,
  ( 0,-4): 1072,
  ( 0,-5): 1073,
  (-1,-1): 1074,
  (-2,-2): 1075,
  (-3,-3): 1076,
  (-4,-4): 1077,
  (-2, 1): 1078,
  (-1, 2): 1079,
  ( 1, 2): 1080,
  ( 2, 1): 1081,
  ( 2,-1): 1082,
  ( 1,-2): 1083,
  (-1,-2): 1084,
  (-2,-1): 1085,
}

MOVE_MAP_38 = {
  (-1, 0): 1086,
  (-2, 0): 1087,
  (-3, 0): 1088,
  (-4, 0): 1089,
  (-1, 1): 1090,
  ( 0, 1): 1091,
  ( 1, 1): 1092,
  ( 1, 0): 1093,
  ( 2, 0): 1094,
  ( 3, 0): 1095,
  ( 1,-1): 1096,
  ( 2,-2): 1097,
  ( 3,-3): 1098,
  ( 0,-1): 1099,
  ( 0,-2): 1100,
  ( 0,-3): 1101,
  ( 0,-4): 1102,
  ( 0,-5): 1103,
  ( 0,-6): 1104,
  (-1,-1): 1105,
  (-2,-2): 1106,
  (-3,-3): 1107,
  (-4,-4): 1108,
  (-2, 1): 1109,
  ( 2, 1): 1110,
  ( 2,-1): 1111,
  ( 1,-2): 1112,
  (-1,-2): 1113,
  (-2,-1): 1114,
}

MOVE_MAP_39 = {
  (-1, 0): 1115,
  (-2, 0): 1116,
  (-3, 0): 1117,
  (-4, 0): 1118,
  ( 1, 0): 1119,
  ( 2, 0): 1120,
  ( 3, 0): 1121,
  ( 1,-1): 1122,
  ( 2,-2): 1123,
  ( 3,-3): 1124,
  ( 0,-1): 1125,
  ( 0,-2): 1126,
  ( 0,-3): 1127,
  ( 0,-4): 1128,
  ( 0,-5): 1129,
  ( 0,-6): 1130,
  ( 0,-7): 1131,
  (-1,-1): 1132,
  (-2,-2): 1133,
  (-3,-3): 1134,
  (-4,-4): 1135,
  ( 2,-1): 1136,
  ( 1,-2): 1137,
  (-1,-2): 1138,
  (-2,-1): 1139,
}

MOVE_MAP_40 = {
  (-1, 0): 1140,
  (-2, 0): 1141,
  (-3, 0): 1142,
  (-4, 0): 1143,
  (-5, 0): 1144,
  (-1, 1): 1145,
  (-2, 2): 1146,
  (-3, 3): 1147,
  (-4, 4): 1148,
  (-5, 5): 1149,
  ( 0, 1): 1150,
  ( 0, 2): 1151,
  ( 0, 3): 1152,
  ( 0, 4): 1153,
  ( 0, 5): 1154,
  ( 0, 6): 1155,
  ( 0, 7): 1156,
  ( 1, 1): 1157,
  ( 2, 2): 1158,
  ( 1, 0): 1159,
  ( 2, 0): 1160,
  (-2, 1): 1161,
  (-1, 2): 1162,
  ( 1, 2): 1163,
  ( 2, 1): 1164,
}

MOVE_MAP_41 = {
  (-1, 0): 1165,
  (-2, 0): 1166,
  (-3, 0): 1167,
  (-4, 0): 1168,
  (-5, 0): 1169,
  (-1, 1): 1170,
  (-2, 2): 1171,
  (-3, 3): 1172,
  (-4, 4): 1173,
  (-5, 5): 1174,
  ( 0, 1): 1175,
  ( 0, 2): 1176,
  ( 0, 3): 1177,
  ( 0, 4): 1178,
  ( 0, 5): 1179,
  ( 0, 6): 1180,
  ( 1, 1): 1181,
  ( 2, 2): 1182,
  ( 1, 0): 1183,
  ( 2, 0): 1184,
  ( 1,-1): 1185,
  ( 0,-1): 1186,
  (-1,-1): 1187,
  (-2, 1): 1188,
  (-1, 2): 1189,
  ( 1, 2): 1190,
  ( 2, 1): 1191,
  ( 2,-1): 1192,
  (-2,-1): 1193,
}

MOVE_MAP_42 = {
  (-1, 0): 1194,
  (-2, 0): 1195,
  (-3, 0): 1196,
  (-4, 0): 1197,
  (-5, 0): 1198,
  (-1, 1): 1199,
  (-2, 2): 1200,
  (-3, 3): 1201,
  (-4, 4): 1202,
  (-5, 5): 1203,
  ( 0, 1): 1204,
  ( 0, 2): 1205,
  ( 0, 3): 1206,
  ( 0, 4): 1207,
  ( 0, 5): 1208,
  ( 1, 1): 1209,
  ( 2, 2): 1210,
  ( 1, 0): 1211,
  ( 2, 0): 1212,
  ( 1,-1): 1213,
  ( 2,-2): 1214,
  ( 0,-1): 1215,
  ( 0,-2): 1216,
  (-1,-1): 1217,
  (-2,-2): 1218,
  (-2, 1): 1219,
  (-1, 2): 1220,
  ( 1, 2): 1221,
  ( 2, 1): 1222,
  ( 2,-1): 1223,
  ( 1,-2): 1224,
  (-1,-2): 1225,
  (-2,-1): 1226,
}

MOVE_MAP_43 = {
  (-1, 0): 1227,
  (-2, 0): 1228,
  (-3, 0): 1229,
  (-4, 0): 1230,
  (-5, 0): 1231,
  (-1, 1): 1232,
  (-2, 2): 1233,
  (-3, 3): 1234,
  (-4, 4): 1235,
  ( 0, 1): 1236,
  ( 0, 2): 1237,
  ( 0, 3): 1238,
  ( 0, 4): 1239,
  ( 1, 1): 1240,
  ( 2, 2): 1241,
  ( 1, 0): 1242,
  ( 2, 0): 1243,
  ( 1,-1): 1244,
  ( 2,-2): 1245,
  ( 0,-1): 1246,
  ( 0,-2): 1247,
  ( 0,-3): 1248,
  (-1,-1): 1249,
  (-2,-2): 1250,
  (-3,-3): 1251,
  (-2, 1): 1252,
  (-1, 2): 1253,
  ( 1, 2): 1254,
  ( 2, 1): 1255,
  ( 2,-1): 1256,
  ( 1,-2): 1257,
  (-1,-2): 1258,
  (-2,-1): 1259,
}

MOVE_MAP_44 = {
  (-1, 0): 1260,
  (-2, 0): 1261,
  (-3, 0): 1262,
  (-4, 0): 1263,
  (-5, 0): 1264,
  (-1, 1): 1265,
  (-2, 2): 1266,
  (-3, 3): 1267,
  ( 0, 1): 1268,
  ( 0, 2): 1269,
  ( 0, 3): 1270,
  ( 1, 1): 1271,
  ( 2, 2): 1272,
  ( 1, 0): 1273,
  ( 2, 0): 1274,
  ( 1,-1): 1275,
  ( 2,-2): 1276,
  ( 0,-1): 1277,
  ( 0,-2): 1278,
  ( 0,-3): 1279,
  ( 0,-4): 1280,
  (-1,-1): 1281,
  (-2,-2): 1282,
  (-3,-3): 1283,
  (-4,-4): 1284,
  (-2, 1): 1285,
  (-1, 2): 1286,
  ( 1, 2): 1287,
  ( 2, 1): 1288,
  ( 2,-1): 1289,
  ( 1,-2): 1290,
  (-1,-2): 1291,
  (-2,-1): 1292,
}

MOVE_MAP_45 = {
  (-1, 0): 1293,
  (-2, 0): 1294,
  (-3, 0): 1295,
  (-4, 0): 1296,
  (-5, 0): 1297,
  (-1, 1): 1298,
  (-2, 2): 1299,
  ( 0, 1): 1300,
  ( 0, 2): 1301,
  ( 1, 1): 1302,
  ( 2, 2): 1303,
  ( 1, 0): 1304,
  ( 2, 0): 1305,
  ( 1,-1): 1306,
  ( 2,-2): 1307,
  ( 0,-1): 1308,
  ( 0,-2): 1309,
  ( 0,-3): 1310,
  ( 0,-4): 1311,
  ( 0,-5): 1312,
  (-1,-1): 1313,
  (-2,-2): 1314,
  (-3,-3): 1315,
  (-4,-4): 1316,
  (-5,-5): 1317,
  (-2, 1): 1318,
  (-1, 2): 1319,
  ( 1, 2): 1320,
  ( 2, 1): 1321,
  ( 2,-1): 1322,
  ( 1,-2): 1323,
  (-1,-2): 1324,
  (-2,-1): 1325,
}

MOVE_MAP_46 = {
  (-1, 0): 1326,
  (-2, 0): 1327,
  (-3, 0): 1328,
  (-4, 0): 1329,
  (-5, 0): 1330,
  (-1, 1): 1331,
  ( 0, 1): 1332,
  ( 1, 1): 1333,
  ( 1, 0): 1334,
  ( 2, 0): 1335,
  ( 1,-1): 1336,
  ( 2,-2): 1337,
  ( 0,-1): 1338,
  ( 0,-2): 1339,
  ( 0,-3): 1340,
  ( 0,-4): 1341,
  ( 0,-5): 1342,
  ( 0,-6): 1343,
  (-1,-1): 1344,
  (-2,-2): 1345,
  (-3,-3): 1346,
  (-4,-4): 1347,
  (-5,-5): 1348,
  (-2, 1): 1349,
  ( 2, 1): 1350,
  ( 2,-1): 1351,
  ( 1,-2): 1352,
  (-1,-2): 1353,
  (-2,-1): 1354,
}

MOVE_MAP_47 = {
  (-1, 0): 1355,
  (-2, 0): 1356,
  (-3, 0): 1357,
  (-4, 0): 1358,
  (-5, 0): 1359,
  ( 1, 0): 1360,
  ( 2, 0): 1361,
  ( 1,-1): 1362,
  ( 2,-2): 1363,
  ( 0,-1): 1364,
  ( 0,-2): 1365,
  ( 0,-3): 1366,
  ( 0,-4): 1367,
  ( 0,-5): 1368,
  ( 0,-6): 1369,
  ( 0,-7): 1370,
  (-1,-1): 1371,
  (-2,-2): 1372,
  (-3,-3): 1373,
  (-4,-4): 1374,
  (-5,-5): 1375,
  ( 2,-1): 1376,
  ( 1,-2): 1377,
  (-1,-2): 1378,
  (-2,-1): 1379,
}

MOVE_MAP_48 = {
  (-1, 0): 1380,
  (-2, 0): 1381,
  (-3, 0): 1382,
  (-4, 0): 1383,
  (-5, 0): 1384,
  (-6, 0): 1385,
  (-1, 1): 1386,
  (-2, 2): 1387,
  (-3, 3): 1388,
  (-4, 4): 1389,
  (-5, 5): 1390,
  (-6, 6): 1391,
  ( 0, 1): 1392,
  ( 0, 2): 1393,
  ( 0, 3): 1394,
  ( 0, 4): 1395,
  ( 0, 5): 1396,
  ( 0, 6): 1397,
  ( 0, 7): 1398,
  ( 1, 1): 1399,
  ( 1, 0): 1400,
  (-2, 1): 1401,
  (-1, 2): 1402,
  ( 1, 2): 1403,
}

MOVE_MAP_49 = {
  (-1, 0): 1404,
  (-2, 0): 1405,
  (-3, 0): 1406,
  (-4, 0): 1407,
  (-5, 0): 1408,
  (-6, 0): 1409,
  (-1, 1): 1410,
  (-2, 2): 1411,
  (-3, 3): 1412,
  (-4, 4): 1413,
  (-5, 5): 1414,
  (-6, 6): 1415,
  ( 0, 1): 1416,
  ( 0, 2): 1417,
  ( 0, 3): 1418,
  ( 0, 4): 1419,
  ( 0, 5): 1420,
  ( 0, 6): 1421,
  ( 1, 1): 1422,
  ( 1, 0): 1423,
  ( 1,-1): 1424,
  ( 0,-1): 1425,
  (-1,-1): 1426,
  (-2, 1): 1427,
  (-1, 2): 1428,
  ( 1, 2): 1429,
  (-2,-1): 1430,
}

MOVE_MAP_50 = {
  (-1, 0): 1431,
  (-2, 0): 1432,
  (-3, 0): 1433,
  (-4, 0): 1434,
  (-5, 0): 1435,
  (-6, 0): 1436,
  (-1, 1): 1437,
  (-2, 2): 1438,
  (-3, 3): 1439,
  (-4, 4): 1440,
  (-5, 5): 1441,
  ( 0, 1): 1442,
  ( 0, 2): 1443,
  ( 0, 3): 1444,
  ( 0, 4): 1445,
  ( 0, 5): 1446,
  ( 1, 1): 1447,
  ( 1, 0): 1448,
  ( 1,-1): 1449,
  ( 0,-1): 1450,
  ( 0,-2): 1451,
  (-1,-1): 1452,
  (-2,-2): 1453,
  (-2, 1): 1454,
  (-1, 2): 1455,
  ( 1, 2): 1456,
  ( 1,-2): 1457,
  (-1,-2): 1458,
  (-2,-1): 1459,
}

MOVE_MAP_51 = {
  (-1, 0): 1460,
  (-2, 0): 1461,
  (-3, 0): 1462,
  (-4, 0): 1463,
  (-5, 0): 1464,
  (-6, 0): 1465,
  (-1, 1): 1466,
  (-2, 2): 1467,
  (-3, 3): 1468,
  (-4, 4): 1469,
  ( 0, 1): 1470,
  ( 0, 2): 1471,
  ( 0, 3): 1472,
  ( 0, 4): 1473,
  ( 1, 1): 1474,
  ( 1, 0): 1475,
  ( 1,-1): 1476,
  ( 0,-1): 1477,
  ( 0,-2): 1478,
  ( 0,-3): 1479,
  (-1,-1): 1480,
  (-2,-2): 1481,
  (-3,-3): 1482,
  (-2, 1): 1483,
  (-1, 2): 1484,
  ( 1, 2): 1485,
  ( 1,-2): 1486,
  (-1,-2): 1487,
  (-2,-1): 1488,
}

MOVE_MAP_52 = {
  (-1, 0): 1489,
  (-2, 0): 1490,
  (-3, 0): 1491,
  (-4, 0): 1492,
  (-5, 0): 1493,
  (-6, 0): 1494,
  (-1, 1): 1495,
  (-2, 2): 1496,
  (-3, 3): 1497,
  ( 0, 1): 1498,
  ( 0, 2): 1499,
  ( 0, 3): 1500,
  ( 1, 1): 1501,
  ( 1, 0): 1502,
  ( 1,-1): 1503,
  ( 0,-1): 1504,
  ( 0,-2): 1505,
  ( 0,-3): 1506,
  ( 0,-4): 1507,
  (-1,-1): 1508,
  (-2,-2): 1509,
  (-3,-3): 1510,
  (-4,-4): 1511,
  (-2, 1): 1512,
  (-1, 2): 1513,
  ( 1, 2): 1514,
  ( 1,-2): 1515,
  (-1,-2): 1516,
  (-2,-1): 1517,
}

MOVE_MAP_53 = {
  (-1, 0): 1518,
  (-2, 0): 1519,
  (-3, 0): 1520,
  (-4, 0): 1521,
  (-5, 0): 1522,
  (-6, 0): 1523,
  (-1, 1): 1524,
  (-2, 2): 1525,
  ( 0, 1): 1526,
  ( 0, 2): 1527,
  ( 1, 1): 1528,
  ( 1, 0): 1529,
  ( 1,-1): 1530,
  ( 0,-1): 1531,
  ( 0,-2): 1532,
  ( 0,-3): 1533,
  ( 0,-4): 1534,
  ( 0,-5): 1535,
  (-1,-1): 1536,
  (-2,-2): 1537,
  (-3,-3): 1538,
  (-4,-4): 1539,
  (-5,-5): 1540,
  (-2, 1): 1541,
  (-1, 2): 1542,
  ( 1, 2): 1543,
  ( 1,-2): 1544,
  (-1,-2): 1545,
  (-2,-1): 1546,
}

MOVE_MAP_54 = {
  (-1, 0): 1547,
  (-2, 0): 1548,
  (-3, 0): 1549,
  (-4, 0): 1550,
  (-5, 0): 1551,
  (-6, 0): 1552,
  (-1, 1): 1553,
  ( 0, 1): 1554,
  ( 1, 1): 1555,
  ( 1, 0): 1556,
  ( 1,-1): 1557,
  ( 0,-1): 1558,
  ( 0,-2): 1559,
  ( 0,-3): 1560,
  ( 0,-4): 1561,
  ( 0,-5): 1562,
  ( 0,-6): 1563,
  (-1,-1): 1564,
  (-2,-2): 1565,
  (-3,-3): 1566,
  (-4,-4): 1567,
  (-5,-5): 1568,
  (-6,-6): 1569,
  (-2, 1): 1570,
  ( 1,-2): 1571,
  (-1,-2): 1572,
  (-2,-1): 1573,
}

MOVE_MAP_55 = {
  (-1, 0): 1574,
  (-2, 0): 1575,
  (-3, 0): 1576,
  (-4, 0): 1577,
  (-5, 0): 1578,
  (-6, 0): 1579,
  ( 1, 0): 1580,
  ( 1,-1): 1581,
  ( 0,-1): 1582,
  ( 0,-2): 1583,
  ( 0,-3): 1584,
  ( 0,-4): 1585,
  ( 0,-5): 1586,
  ( 0,-6): 1587,
  ( 0,-7): 1588,
  (-1,-1): 1589,
  (-2,-2): 1590,
  (-3,-3): 1591,
  (-4,-4): 1592,
  (-5,-5): 1593,
  (-6,-6): 1594,
  ( 1,-2): 1595,
  (-1,-2): 1596,
  (-2,-1): 1597,
}

MOVE_MAP_56 = {
  (-1, 0): 1598,
  (-2, 0): 1599,
  (-3, 0): 1600,
  (-4, 0): 1601,
  (-5, 0): 1602,
  (-6, 0): 1603,
  (-7, 0): 1604,
  (-1, 1): 1605,
  (-2, 2): 1606,
  (-3, 3): 1607,
  (-4, 4): 1608,
  (-5, 5): 1609,
  (-6, 6): 1610,
  (-7, 7): 1611,
  ( 0, 1): 1612,
  ( 0, 2): 1613,
  ( 0, 3): 1614,
  ( 0, 4): 1615,
  ( 0, 5): 1616,
  ( 0, 6): 1617,
  ( 0, 7): 1618,
  (-2, 1): 1619,
  (-1, 2): 1620,
}

MOVE_MAP_57 = {
  (-1, 0): 1621,
  (-2, 0): 1622,
  (-3, 0): 1623,
  (-4, 0): 1624,
  (-5, 0): 1625,
  (-6, 0): 1626,
  (-7, 0): 1627,
  (-1, 1): 1628,
  (-2, 2): 1629,
  (-3, 3): 1630,
  (-4, 4): 1631,
  (-5, 5): 1632,
  (-6, 6): 1633,
  ( 0, 1): 1634,
  ( 0, 2): 1635,
  ( 0, 3): 1636,
  ( 0, 4): 1637,
  ( 0, 5): 1638,
  ( 0, 6): 1639,
  ( 0,-1): 1640,
  (-1,-1): 1641,
  (-2, 1): 1642,
  (-1, 2): 1643,
  (-2,-1): 1644,
}

MOVE_MAP_58 = {
  (-1, 0): 1645,
  (-2, 0): 1646,
  (-3, 0): 1647,
  (-4, 0): 1648,
  (-5, 0): 1649,
  (-6, 0): 1650,
  (-7, 0): 1651,
  (-1, 1): 1652,
  (-2, 2): 1653,
  (-3, 3): 1654,
  (-4, 4): 1655,
  (-5, 5): 1656,
  ( 0, 1): 1657,
  ( 0, 2): 1658,
  ( 0, 3): 1659,
  ( 0, 4): 1660,
  ( 0, 5): 1661,
  ( 0,-1): 1662,
  ( 0,-2): 1663,
  (-1,-1): 1664,
  (-2,-2): 1665,
  (-2, 1): 1666,
  (-1, 2): 1667,
  (-1,-2): 1668,
  (-2,-1): 1669,
}

MOVE_MAP_59 = {
  (-1, 0): 1670,
  (-2, 0): 1671,
  (-3, 0): 1672,
  (-4, 0): 1673,
  (-5, 0): 1674,
  (-6, 0): 1675,
  (-7, 0): 1676,
  (-1, 1): 1677,
  (-2, 2): 1678,
  (-3, 3): 1679,
  (-4, 4): 1680,
  ( 0, 1): 1681,
  ( 0, 2): 1682,
  ( 0, 3): 1683,
  ( 0, 4): 1684,
  ( 0,-1): 1685,
  ( 0,-2): 1686,
  ( 0,-3): 1687,
  (-1,-1): 1688,
  (-2,-2): 1689,
  (-3,-3): 1690,
  (-2, 1): 1691,
  (-1, 2): 1692,
  (-1,-2): 1693,
  (-2,-1): 1694,
}

MOVE_MAP_60 = {
  (-1, 0): 1695,
  (-2, 0): 1696,
  (-3, 0): 1697,
  (-4, 0): 1698,
  (-5, 0): 1699,
  (-6, 0): 1700,
  (-7, 0): 1701,
  (-1, 1): 1702,
  (-2, 2): 1703,
  (-3, 3): 1704,
  ( 0, 1): 1705,
  ( 0, 2): 1706,
  ( 0, 3): 1707,
  ( 0,-1): 1708,
  ( 0,-2): 1709,
  ( 0,-3): 1710,
  ( 0,-4): 1711,
  (-1,-1): 1712,
  (-2,-2): 1713,
  (-3,-3): 1714,
  (-4,-4): 1715,
  (-2, 1): 1716,
  (-1, 2): 1717,
  (-1,-2): 1718,
  (-2,-1): 1719,
}

MOVE_MAP_61 = {
  (-1, 0): 1720,
  (-2, 0): 1721,
  (-3, 0): 1722,
  (-4, 0): 1723,
  (-5, 0): 1724,
  (-6, 0): 1725,
  (-7, 0): 1726,
  (-1, 1): 1727,
  (-2, 2): 1728,
  ( 0, 1): 1729,
  ( 0, 2): 1730,
  ( 0,-1): 1731,
  ( 0,-2): 1732,
  ( 0,-3): 1733,
  ( 0,-4): 1734,
  ( 0,-5): 1735,
  (-1,-1): 1736,
  (-2,-2): 1737,
  (-3,-3): 1738,
  (-4,-4): 1739,
  (-5,-5): 1740,
  (-2, 1): 1741,
  (-1, 2): 1742,
  (-1,-2): 1743,
  (-2,-1): 1744,
}

MOVE_MAP_62 = {
  (-1, 0): 1745,
  (-2, 0): 1746,
  (-3, 0): 1747,
  (-4, 0): 1748,
  (-5, 0): 1749,
  (-6, 0): 1750,
  (-7, 0): 1751,
  (-1, 1): 1752,
  ( 0, 1): 1753,
  ( 0,-1): 1754,
  ( 0,-2): 1755,
  ( 0,-3): 1756,
  ( 0,-4): 1757,
  ( 0,-5): 1758,
  ( 0,-6): 1759,
  (-1,-1): 1760,
  (-2,-2): 1761,
  (-3,-3): 1762,
  (-4,-4): 1763,
  (-5,-5): 1764,
  (-6,-6): 1765,
  (-2, 1): 1766,
  (-1,-2): 1767,
  (-2,-1): 1768,
}

MOVE_MAP_63 = {
  (-1, 0): 1769,
  (-2, 0): 1770,
  (-3, 0): 1771,
  (-4, 0): 1772,
  (-5, 0): 1773,
  (-6, 0): 1774,
  (-7, 0): 1775,
  ( 0,-1): 1776,
  ( 0,-2): 1777,
  ( 0,-3): 1778,
  ( 0,-4): 1779,
  ( 0,-5): 1780,
  ( 0,-6): 1781,
  ( 0,-7): 1782,
  (-1,-1): 1783,
  (-2,-2): 1784,
  (-3,-3): 1785,
  (-4,-4): 1786,
  (-5,-5): 1787,
  (-6,-6): 1788,
  (-7,-7): 1789,
  (-1,-2): 1790,
  (-2,-1): 1791,
}

MOVE_MAP_MAP = {
  0: MOVE_MAP_0,
  1: MOVE_MAP_1,
  2: MOVE_MAP_2,
  3: MOVE_MAP_3,
  4: MOVE_MAP_4,
  5: MOVE_MAP_5,
  6: MOVE_MAP_6,
  7: MOVE_MAP_7,
  8: MOVE_MAP_8,
  9: MOVE_MAP_9,
  10: MOVE_MAP_10,
  11: MOVE_MAP_11,
  12: MOVE_MAP_12,
  13: MOVE_MAP_13,
  14: MOVE_MAP_14,
  15: MOVE_MAP_15,
  16: MOVE_MAP_16,
  17: MOVE_MAP_17,
  18: MOVE_MAP_18,
  19: MOVE_MAP_19,
  20: MOVE_MAP_20,
  21: MOVE_MAP_21,
  22: MOVE_MAP_22,
  23: MOVE_MAP_23,
  24: MOVE_MAP_24,
  25: MOVE_MAP_25,
  26: MOVE_MAP_26,
  27: MOVE_MAP_27,
  28: MOVE_MAP_28,
  29: MOVE_MAP_29,
  30: MOVE_MAP_30,
  31: MOVE_MAP_31,
  32: MOVE_MAP_32,
  33: MOVE_MAP_33,
  34: MOVE_MAP_34,
  35: MOVE_MAP_35,
  36: MOVE_MAP_36,
  37: MOVE_MAP_37,
  38: MOVE_MAP_38,
  39: MOVE_MAP_39,
  40: MOVE_MAP_40,
  41: MOVE_MAP_41,
  42: MOVE_MAP_42,
  43: MOVE_MAP_43,
  44: MOVE_MAP_44,
  45: MOVE_MAP_45,
  46: MOVE_MAP_46,
  47: MOVE_MAP_47,
  48: MOVE_MAP_48,
  49: MOVE_MAP_49,
  50: MOVE_MAP_50,
  51: MOVE_MAP_51,
  52: MOVE_MAP_52,
  53: MOVE_MAP_53,
  54: MOVE_MAP_54,
  55: MOVE_MAP_55,
  56: MOVE_MAP_56,
  57: MOVE_MAP_57,
  58: MOVE_MAP_58,
  59: MOVE_MAP_59,
  60: MOVE_MAP_60,
  61: MOVE_MAP_61,
  62: MOVE_MAP_62,
  63: MOVE_MAP_63,
}

INV_MOVE_MAP_MAP = {
  0: (0, ( 0, 1)),
  1: (0, ( 0, 2)),
  2: (0, ( 0, 3)),
  3: (0, ( 0, 4)),
  4: (0, ( 0, 5)),
  5: (0, ( 0, 6)),
  6: (0, ( 0, 7)),
  7: (0, ( 1, 1)),
  8: (0, ( 2, 2)),
  9: (0, ( 3, 3)),
  10: (0, ( 4, 4)),
  11: (0, ( 5, 5)),
  12: (0, ( 6, 6)),
  13: (0, ( 7, 7)),
  14: (0, ( 1, 0)),
  15: (0, ( 2, 0)),
  16: (0, ( 3, 0)),
  17: (0, ( 4, 0)),
  18: (0, ( 5, 0)),
  19: (0, ( 6, 0)),
  20: (0, ( 7, 0)),
  21: (0, ( 1, 2)),
  22: (0, ( 2, 1)),
  23: (1, ( 0, 1)),
  24: (1, ( 0, 2)),
  25: (1, ( 0, 3)),
  26: (1, ( 0, 4)),
  27: (1, ( 0, 5)),
  28: (1, ( 0, 6)),
  29: (1, ( 1, 1)),
  30: (1, ( 2, 2)),
  31: (1, ( 3, 3)),
  32: (1, ( 4, 4)),
  33: (1, ( 5, 5)),
  34: (1, ( 6, 6)),
  35: (1, ( 1, 0)),
  36: (1, ( 2, 0)),
  37: (1, ( 3, 0)),
  38: (1, ( 4, 0)),
  39: (1, ( 5, 0)),
  40: (1, ( 6, 0)),
  41: (1, ( 7, 0)),
  42: (1, ( 1,-1)),
  43: (1, ( 0,-1)),
  44: (1, ( 1, 2)),
  45: (1, ( 2, 1)),
  46: (1, ( 2,-1)),
  47: (2, ( 0, 1)),
  48: (2, ( 0, 2)),
  49: (2, ( 0, 3)),
  50: (2, ( 0, 4)),
  51: (2, ( 0, 5)),
  52: (2, ( 1, 1)),
  53: (2, ( 2, 2)),
  54: (2, ( 3, 3)),
  55: (2, ( 4, 4)),
  56: (2, ( 5, 5)),
  57: (2, ( 1, 0)),
  58: (2, ( 2, 0)),
  59: (2, ( 3, 0)),
  60: (2, ( 4, 0)),
  61: (2, ( 5, 0)),
  62: (2, ( 6, 0)),
  63: (2, ( 7, 0)),
  64: (2, ( 1,-1)),
  65: (2, ( 2,-2)),
  66: (2, ( 0,-1)),
  67: (2, ( 0,-2)),
  68: (2, ( 1, 2)),
  69: (2, ( 2, 1)),
  70: (2, ( 2,-1)),
  71: (2, ( 1,-2)),
  72: (3, ( 0, 1)),
  73: (3, ( 0, 2)),
  74: (3, ( 0, 3)),
  75: (3, ( 0, 4)),
  76: (3, ( 1, 1)),
  77: (3, ( 2, 2)),
  78: (3, ( 3, 3)),
  79: (3, ( 4, 4)),
  80: (3, ( 1, 0)),
  81: (3, ( 2, 0)),
  82: (3, ( 3, 0)),
  83: (3, ( 4, 0)),
  84: (3, ( 5, 0)),
  85: (3, ( 6, 0)),
  86: (3, ( 7, 0)),
  87: (3, ( 1,-1)),
  88: (3, ( 2,-2)),
  89: (3, ( 3,-3)),
  90: (3, ( 0,-1)),
  91: (3, ( 0,-2)),
  92: (3, ( 0,-3)),
  93: (3, ( 1, 2)),
  94: (3, ( 2, 1)),
  95: (3, ( 2,-1)),
  96: (3, ( 1,-2)),
  97: (4, ( 0, 1)),
  98: (4, ( 0, 2)),
  99: (4, ( 0, 3)),
  100: (4, ( 1, 1)),
  101: (4, ( 2, 2)),
  102: (4, ( 3, 3)),
  103: (4, ( 1, 0)),
  104: (4, ( 2, 0)),
  105: (4, ( 3, 0)),
  106: (4, ( 4, 0)),
  107: (4, ( 5, 0)),
  108: (4, ( 6, 0)),
  109: (4, ( 7, 0)),
  110: (4, ( 1,-1)),
  111: (4, ( 2,-2)),
  112: (4, ( 3,-3)),
  113: (4, ( 4,-4)),
  114: (4, ( 0,-1)),
  115: (4, ( 0,-2)),
  116: (4, ( 0,-3)),
  117: (4, ( 0,-4)),
  118: (4, ( 1, 2)),
  119: (4, ( 2, 1)),
  120: (4, ( 2,-1)),
  121: (4, ( 1,-2)),
  122: (5, ( 0, 1)),
  123: (5, ( 0, 2)),
  124: (5, ( 1, 1)),
  125: (5, ( 2, 2)),
  126: (5, ( 1, 0)),
  127: (5, ( 2, 0)),
  128: (5, ( 3, 0)),
  129: (5, ( 4, 0)),
  130: (5, ( 5, 0)),
  131: (5, ( 6, 0)),
  132: (5, ( 7, 0)),
  133: (5, ( 1,-1)),
  134: (5, ( 2,-2)),
  135: (5, ( 3,-3)),
  136: (5, ( 4,-4)),
  137: (5, ( 5,-5)),
  138: (5, ( 0,-1)),
  139: (5, ( 0,-2)),
  140: (5, ( 0,-3)),
  141: (5, ( 0,-4)),
  142: (5, ( 0,-5)),
  143: (5, ( 1, 2)),
  144: (5, ( 2, 1)),
  145: (5, ( 2,-1)),
  146: (5, ( 1,-2)),
  147: (6, ( 0, 1)),
  148: (6, ( 1, 1)),
  149: (6, ( 1, 0)),
  150: (6, ( 2, 0)),
  151: (6, ( 3, 0)),
  152: (6, ( 4, 0)),
  153: (6, ( 5, 0)),
  154: (6, ( 6, 0)),
  155: (6, ( 7, 0)),
  156: (6, ( 1,-1)),
  157: (6, ( 2,-2)),
  158: (6, ( 3,-3)),
  159: (6, ( 4,-4)),
  160: (6, ( 5,-5)),
  161: (6, ( 6,-6)),
  162: (6, ( 0,-1)),
  163: (6, ( 0,-2)),
  164: (6, ( 0,-3)),
  165: (6, ( 0,-4)),
  166: (6, ( 0,-5)),
  167: (6, ( 0,-6)),
  168: (6, ( 2, 1)),
  169: (6, ( 2,-1)),
  170: (6, ( 1,-2)),
  171: (7, ( 1, 0)),
  172: (7, ( 2, 0)),
  173: (7, ( 3, 0)),
  174: (7, ( 4, 0)),
  175: (7, ( 5, 0)),
  176: (7, ( 6, 0)),
  177: (7, ( 7, 0)),
  178: (7, ( 1,-1)),
  179: (7, ( 2,-2)),
  180: (7, ( 3,-3)),
  181: (7, ( 4,-4)),
  182: (7, ( 5,-5)),
  183: (7, ( 6,-6)),
  184: (7, ( 7,-7)),
  185: (7, ( 0,-1)),
  186: (7, ( 0,-2)),
  187: (7, ( 0,-3)),
  188: (7, ( 0,-4)),
  189: (7, ( 0,-5)),
  190: (7, ( 0,-6)),
  191: (7, ( 0,-7)),
  192: (7, ( 2,-1)),
  193: (7, ( 1,-2)),
  194: (8, (-1, 0)),
  195: (8, (-1, 1)),
  196: (8, ( 0, 1)),
  197: (8, ( 0, 2)),
  198: (8, ( 0, 3)),
  199: (8, ( 0, 4)),
  200: (8, ( 0, 5)),
  201: (8, ( 0, 6)),
  202: (8, ( 0, 7)),
  203: (8, ( 1, 1)),
  204: (8, ( 2, 2)),
  205: (8, ( 3, 3)),
  206: (8, ( 4, 4)),
  207: (8, ( 5, 5)),
  208: (8, ( 6, 6)),
  209: (8, ( 1, 0)),
  210: (8, ( 2, 0)),
  211: (8, ( 3, 0)),
  212: (8, ( 4, 0)),
  213: (8, ( 5, 0)),
  214: (8, ( 6, 0)),
  215: (8, (-1, 2)),
  216: (8, ( 1, 2)),
  217: (8, ( 2, 1)),
  218: (9, (-1, 0)),
  219: (9, (-1, 1)),
  220: (9, ( 0, 1)),
  221: (9, ( 0, 2)),
  222: (9, ( 0, 3)),
  223: (9, ( 0, 4)),
  224: (9, ( 0, 5)),
  225: (9, ( 0, 6)),
  226: (9, ( 1, 1)),
  227: (9, ( 2, 2)),
  228: (9, ( 3, 3)),
  229: (9, ( 4, 4)),
  230: (9, ( 5, 5)),
  231: (9, ( 6, 6)),
  232: (9, ( 1, 0)),
  233: (9, ( 2, 0)),
  234: (9, ( 3, 0)),
  235: (9, ( 4, 0)),
  236: (9, ( 5, 0)),
  237: (9, ( 6, 0)),
  238: (9, ( 1,-1)),
  239: (9, ( 0,-1)),
  240: (9, (-1,-1)),
  241: (9, (-1, 2)),
  242: (9, ( 1, 2)),
  243: (9, ( 2, 1)),
  244: (9, ( 2,-1)),
  245: (10, (-1, 0)),
  246: (10, (-1, 1)),
  247: (10, ( 0, 1)),
  248: (10, ( 0, 2)),
  249: (10, ( 0, 3)),
  250: (10, ( 0, 4)),
  251: (10, ( 0, 5)),
  252: (10, ( 1, 1)),
  253: (10, ( 2, 2)),
  254: (10, ( 3, 3)),
  255: (10, ( 4, 4)),
  256: (10, ( 5, 5)),
  257: (10, ( 1, 0)),
  258: (10, ( 2, 0)),
  259: (10, ( 3, 0)),
  260: (10, ( 4, 0)),
  261: (10, ( 5, 0)),
  262: (10, ( 6, 0)),
  263: (10, ( 1,-1)),
  264: (10, ( 2,-2)),
  265: (10, ( 0,-1)),
  266: (10, ( 0,-2)),
  267: (10, (-1,-1)),
  268: (10, (-1, 2)),
  269: (10, ( 1, 2)),
  270: (10, ( 2, 1)),
  271: (10, ( 2,-1)),
  272: (10, ( 1,-2)),
  273: (10, (-1,-2)),
  274: (11, (-1, 0)),
  275: (11, (-1, 1)),
  276: (11, ( 0, 1)),
  277: (11, ( 0, 2)),
  278: (11, ( 0, 3)),
  279: (11, ( 0, 4)),
  280: (11, ( 1, 1)),
  281: (11, ( 2, 2)),
  282: (11, ( 3, 3)),
  283: (11, ( 4, 4)),
  284: (11, ( 1, 0)),
  285: (11, ( 2, 0)),
  286: (11, ( 3, 0)),
  287: (11, ( 4, 0)),
  288: (11, ( 5, 0)),
  289: (11, ( 6, 0)),
  290: (11, ( 1,-1)),
  291: (11, ( 2,-2)),
  292: (11, ( 3,-3)),
  293: (11, ( 0,-1)),
  294: (11, ( 0,-2)),
  295: (11, ( 0,-3)),
  296: (11, (-1,-1)),
  297: (11, (-1, 2)),
  298: (11, ( 1, 2)),
  299: (11, ( 2, 1)),
  300: (11, ( 2,-1)),
  301: (11, ( 1,-2)),
  302: (11, (-1,-2)),
  303: (12, (-1, 0)),
  304: (12, (-1, 1)),
  305: (12, ( 0, 1)),
  306: (12, ( 0, 2)),
  307: (12, ( 0, 3)),
  308: (12, ( 1, 1)),
  309: (12, ( 2, 2)),
  310: (12, ( 3, 3)),
  311: (12, ( 1, 0)),
  312: (12, ( 2, 0)),
  313: (12, ( 3, 0)),
  314: (12, ( 4, 0)),
  315: (12, ( 5, 0)),
  316: (12, ( 6, 0)),
  317: (12, ( 1,-1)),
  318: (12, ( 2,-2)),
  319: (12, ( 3,-3)),
  320: (12, ( 4,-4)),
  321: (12, ( 0,-1)),
  322: (12, ( 0,-2)),
  323: (12, ( 0,-3)),
  324: (12, ( 0,-4)),
  325: (12, (-1,-1)),
  326: (12, (-1, 2)),
  327: (12, ( 1, 2)),
  328: (12, ( 2, 1)),
  329: (12, ( 2,-1)),
  330: (12, ( 1,-2)),
  331: (12, (-1,-2)),
  332: (13, (-1, 0)),
  333: (13, (-1, 1)),
  334: (13, ( 0, 1)),
  335: (13, ( 0, 2)),
  336: (13, ( 1, 1)),
  337: (13, ( 2, 2)),
  338: (13, ( 1, 0)),
  339: (13, ( 2, 0)),
  340: (13, ( 3, 0)),
  341: (13, ( 4, 0)),
  342: (13, ( 5, 0)),
  343: (13, ( 6, 0)),
  344: (13, ( 1,-1)),
  345: (13, ( 2,-2)),
  346: (13, ( 3,-3)),
  347: (13, ( 4,-4)),
  348: (13, ( 5,-5)),
  349: (13, ( 0,-1)),
  350: (13, ( 0,-2)),
  351: (13, ( 0,-3)),
  352: (13, ( 0,-4)),
  353: (13, ( 0,-5)),
  354: (13, (-1,-1)),
  355: (13, (-1, 2)),
  356: (13, ( 1, 2)),
  357: (13, ( 2, 1)),
  358: (13, ( 2,-1)),
  359: (13, ( 1,-2)),
  360: (13, (-1,-2)),
  361: (14, (-1, 0)),
  362: (14, (-1, 1)),
  363: (14, ( 0, 1)),
  364: (14, ( 1, 1)),
  365: (14, ( 1, 0)),
  366: (14, ( 2, 0)),
  367: (14, ( 3, 0)),
  368: (14, ( 4, 0)),
  369: (14, ( 5, 0)),
  370: (14, ( 6, 0)),
  371: (14, ( 1,-1)),
  372: (14, ( 2,-2)),
  373: (14, ( 3,-3)),
  374: (14, ( 4,-4)),
  375: (14, ( 5,-5)),
  376: (14, ( 6,-6)),
  377: (14, ( 0,-1)),
  378: (14, ( 0,-2)),
  379: (14, ( 0,-3)),
  380: (14, ( 0,-4)),
  381: (14, ( 0,-5)),
  382: (14, ( 0,-6)),
  383: (14, (-1,-1)),
  384: (14, ( 2, 1)),
  385: (14, ( 2,-1)),
  386: (14, ( 1,-2)),
  387: (14, (-1,-2)),
  388: (15, (-1, 0)),
  389: (15, ( 1, 0)),
  390: (15, ( 2, 0)),
  391: (15, ( 3, 0)),
  392: (15, ( 4, 0)),
  393: (15, ( 5, 0)),
  394: (15, ( 6, 0)),
  395: (15, ( 1,-1)),
  396: (15, ( 2,-2)),
  397: (15, ( 3,-3)),
  398: (15, ( 4,-4)),
  399: (15, ( 5,-5)),
  400: (15, ( 6,-6)),
  401: (15, ( 0,-1)),
  402: (15, ( 0,-2)),
  403: (15, ( 0,-3)),
  404: (15, ( 0,-4)),
  405: (15, ( 0,-5)),
  406: (15, ( 0,-6)),
  407: (15, ( 0,-7)),
  408: (15, (-1,-1)),
  409: (15, ( 2,-1)),
  410: (15, ( 1,-2)),
  411: (15, (-1,-2)),
  412: (16, (-1, 0)),
  413: (16, (-2, 0)),
  414: (16, (-1, 1)),
  415: (16, (-2, 2)),
  416: (16, ( 0, 1)),
  417: (16, ( 0, 2)),
  418: (16, ( 0, 3)),
  419: (16, ( 0, 4)),
  420: (16, ( 0, 5)),
  421: (16, ( 0, 6)),
  422: (16, ( 0, 7)),
  423: (16, ( 1, 1)),
  424: (16, ( 2, 2)),
  425: (16, ( 3, 3)),
  426: (16, ( 4, 4)),
  427: (16, ( 5, 5)),
  428: (16, ( 1, 0)),
  429: (16, ( 2, 0)),
  430: (16, ( 3, 0)),
  431: (16, ( 4, 0)),
  432: (16, ( 5, 0)),
  433: (16, (-2, 1)),
  434: (16, (-1, 2)),
  435: (16, ( 1, 2)),
  436: (16, ( 2, 1)),
  437: (17, (-1, 0)),
  438: (17, (-2, 0)),
  439: (17, (-1, 1)),
  440: (17, (-2, 2)),
  441: (17, ( 0, 1)),
  442: (17, ( 0, 2)),
  443: (17, ( 0, 3)),
  444: (17, ( 0, 4)),
  445: (17, ( 0, 5)),
  446: (17, ( 0, 6)),
  447: (17, ( 1, 1)),
  448: (17, ( 2, 2)),
  449: (17, ( 3, 3)),
  450: (17, ( 4, 4)),
  451: (17, ( 5, 5)),
  452: (17, ( 1, 0)),
  453: (17, ( 2, 0)),
  454: (17, ( 3, 0)),
  455: (17, ( 4, 0)),
  456: (17, ( 5, 0)),
  457: (17, ( 1,-1)),
  458: (17, ( 0,-1)),
  459: (17, (-1,-1)),
  460: (17, (-2, 1)),
  461: (17, (-1, 2)),
  462: (17, ( 1, 2)),
  463: (17, ( 2, 1)),
  464: (17, ( 2,-1)),
  465: (17, (-2,-1)),
  466: (18, (-1, 0)),
  467: (18, (-2, 0)),
  468: (18, (-1, 1)),
  469: (18, (-2, 2)),
  470: (18, ( 0, 1)),
  471: (18, ( 0, 2)),
  472: (18, ( 0, 3)),
  473: (18, ( 0, 4)),
  474: (18, ( 0, 5)),
  475: (18, ( 1, 1)),
  476: (18, ( 2, 2)),
  477: (18, ( 3, 3)),
  478: (18, ( 4, 4)),
  479: (18, ( 5, 5)),
  480: (18, ( 1, 0)),
  481: (18, ( 2, 0)),
  482: (18, ( 3, 0)),
  483: (18, ( 4, 0)),
  484: (18, ( 5, 0)),
  485: (18, ( 1,-1)),
  486: (18, ( 2,-2)),
  487: (18, ( 0,-1)),
  488: (18, ( 0,-2)),
  489: (18, (-1,-1)),
  490: (18, (-2,-2)),
  491: (18, (-2, 1)),
  492: (18, (-1, 2)),
  493: (18, ( 1, 2)),
  494: (18, ( 2, 1)),
  495: (18, ( 2,-1)),
  496: (18, ( 1,-2)),
  497: (18, (-1,-2)),
  498: (18, (-2,-1)),
  499: (19, (-1, 0)),
  500: (19, (-2, 0)),
  501: (19, (-1, 1)),
  502: (19, (-2, 2)),
  503: (19, ( 0, 1)),
  504: (19, ( 0, 2)),
  505: (19, ( 0, 3)),
  506: (19, ( 0, 4)),
  507: (19, ( 1, 1)),
  508: (19, ( 2, 2)),
  509: (19, ( 3, 3)),
  510: (19, ( 4, 4)),
  511: (19, ( 1, 0)),
  512: (19, ( 2, 0)),
  513: (19, ( 3, 0)),
  514: (19, ( 4, 0)),
  515: (19, ( 5, 0)),
  516: (19, ( 1,-1)),
  517: (19, ( 2,-2)),
  518: (19, ( 3,-3)),
  519: (19, ( 0,-1)),
  520: (19, ( 0,-2)),
  521: (19, ( 0,-3)),
  522: (19, (-1,-1)),
  523: (19, (-2,-2)),
  524: (19, (-2, 1)),
  525: (19, (-1, 2)),
  526: (19, ( 1, 2)),
  527: (19, ( 2, 1)),
  528: (19, ( 2,-1)),
  529: (19, ( 1,-2)),
  530: (19, (-1,-2)),
  531: (19, (-2,-1)),
  532: (20, (-1, 0)),
  533: (20, (-2, 0)),
  534: (20, (-1, 1)),
  535: (20, (-2, 2)),
  536: (20, ( 0, 1)),
  537: (20, ( 0, 2)),
  538: (20, ( 0, 3)),
  539: (20, ( 1, 1)),
  540: (20, ( 2, 2)),
  541: (20, ( 3, 3)),
  542: (20, ( 1, 0)),
  543: (20, ( 2, 0)),
  544: (20, ( 3, 0)),
  545: (20, ( 4, 0)),
  546: (20, ( 5, 0)),
  547: (20, ( 1,-1)),
  548: (20, ( 2,-2)),
  549: (20, ( 3,-3)),
  550: (20, ( 4,-4)),
  551: (20, ( 0,-1)),
  552: (20, ( 0,-2)),
  553: (20, ( 0,-3)),
  554: (20, ( 0,-4)),
  555: (20, (-1,-1)),
  556: (20, (-2,-2)),
  557: (20, (-2, 1)),
  558: (20, (-1, 2)),
  559: (20, ( 1, 2)),
  560: (20, ( 2, 1)),
  561: (20, ( 2,-1)),
  562: (20, ( 1,-2)),
  563: (20, (-1,-2)),
  564: (20, (-2,-1)),
  565: (21, (-1, 0)),
  566: (21, (-2, 0)),
  567: (21, (-1, 1)),
  568: (21, (-2, 2)),
  569: (21, ( 0, 1)),
  570: (21, ( 0, 2)),
  571: (21, ( 1, 1)),
  572: (21, ( 2, 2)),
  573: (21, ( 1, 0)),
  574: (21, ( 2, 0)),
  575: (21, ( 3, 0)),
  576: (21, ( 4, 0)),
  577: (21, ( 5, 0)),
  578: (21, ( 1,-1)),
  579: (21, ( 2,-2)),
  580: (21, ( 3,-3)),
  581: (21, ( 4,-4)),
  582: (21, ( 5,-5)),
  583: (21, ( 0,-1)),
  584: (21, ( 0,-2)),
  585: (21, ( 0,-3)),
  586: (21, ( 0,-4)),
  587: (21, ( 0,-5)),
  588: (21, (-1,-1)),
  589: (21, (-2,-2)),
  590: (21, (-2, 1)),
  591: (21, (-1, 2)),
  592: (21, ( 1, 2)),
  593: (21, ( 2, 1)),
  594: (21, ( 2,-1)),
  595: (21, ( 1,-2)),
  596: (21, (-1,-2)),
  597: (21, (-2,-1)),
  598: (22, (-1, 0)),
  599: (22, (-2, 0)),
  600: (22, (-1, 1)),
  601: (22, ( 0, 1)),
  602: (22, ( 1, 1)),
  603: (22, ( 1, 0)),
  604: (22, ( 2, 0)),
  605: (22, ( 3, 0)),
  606: (22, ( 4, 0)),
  607: (22, ( 5, 0)),
  608: (22, ( 1,-1)),
  609: (22, ( 2,-2)),
  610: (22, ( 3,-3)),
  611: (22, ( 4,-4)),
  612: (22, ( 5,-5)),
  613: (22, ( 0,-1)),
  614: (22, ( 0,-2)),
  615: (22, ( 0,-3)),
  616: (22, ( 0,-4)),
  617: (22, ( 0,-5)),
  618: (22, ( 0,-6)),
  619: (22, (-1,-1)),
  620: (22, (-2,-2)),
  621: (22, (-2, 1)),
  622: (22, ( 2, 1)),
  623: (22, ( 2,-1)),
  624: (22, ( 1,-2)),
  625: (22, (-1,-2)),
  626: (22, (-2,-1)),
  627: (23, (-1, 0)),
  628: (23, (-2, 0)),
  629: (23, ( 1, 0)),
  630: (23, ( 2, 0)),
  631: (23, ( 3, 0)),
  632: (23, ( 4, 0)),
  633: (23, ( 5, 0)),
  634: (23, ( 1,-1)),
  635: (23, ( 2,-2)),
  636: (23, ( 3,-3)),
  637: (23, ( 4,-4)),
  638: (23, ( 5,-5)),
  639: (23, ( 0,-1)),
  640: (23, ( 0,-2)),
  641: (23, ( 0,-3)),
  642: (23, ( 0,-4)),
  643: (23, ( 0,-5)),
  644: (23, ( 0,-6)),
  645: (23, ( 0,-7)),
  646: (23, (-1,-1)),
  647: (23, (-2,-2)),
  648: (23, ( 2,-1)),
  649: (23, ( 1,-2)),
  650: (23, (-1,-2)),
  651: (23, (-2,-1)),
  652: (24, (-1, 0)),
  653: (24, (-2, 0)),
  654: (24, (-3, 0)),
  655: (24, (-1, 1)),
  656: (24, (-2, 2)),
  657: (24, (-3, 3)),
  658: (24, ( 0, 1)),
  659: (24, ( 0, 2)),
  660: (24, ( 0, 3)),
  661: (24, ( 0, 4)),
  662: (24, ( 0, 5)),
  663: (24, ( 0, 6)),
  664: (24, ( 0, 7)),
  665: (24, ( 1, 1)),
  666: (24, ( 2, 2)),
  667: (24, ( 3, 3)),
  668: (24, ( 4, 4)),
  669: (24, ( 1, 0)),
  670: (24, ( 2, 0)),
  671: (24, ( 3, 0)),
  672: (24, ( 4, 0)),
  673: (24, (-2, 1)),
  674: (24, (-1, 2)),
  675: (24, ( 1, 2)),
  676: (24, ( 2, 1)),
  677: (25, (-1, 0)),
  678: (25, (-2, 0)),
  679: (25, (-3, 0)),
  680: (25, (-1, 1)),
  681: (25, (-2, 2)),
  682: (25, (-3, 3)),
  683: (25, ( 0, 1)),
  684: (25, ( 0, 2)),
  685: (25, ( 0, 3)),
  686: (25, ( 0, 4)),
  687: (25, ( 0, 5)),
  688: (25, ( 0, 6)),
  689: (25, ( 1, 1)),
  690: (25, ( 2, 2)),
  691: (25, ( 3, 3)),
  692: (25, ( 4, 4)),
  693: (25, ( 1, 0)),
  694: (25, ( 2, 0)),
  695: (25, ( 3, 0)),
  696: (25, ( 4, 0)),
  697: (25, ( 1,-1)),
  698: (25, ( 0,-1)),
  699: (25, (-1,-1)),
  700: (25, (-2, 1)),
  701: (25, (-1, 2)),
  702: (25, ( 1, 2)),
  703: (25, ( 2, 1)),
  704: (25, ( 2,-1)),
  705: (25, (-2,-1)),
  706: (26, (-1, 0)),
  707: (26, (-2, 0)),
  708: (26, (-3, 0)),
  709: (26, (-1, 1)),
  710: (26, (-2, 2)),
  711: (26, (-3, 3)),
  712: (26, ( 0, 1)),
  713: (26, ( 0, 2)),
  714: (26, ( 0, 3)),
  715: (26, ( 0, 4)),
  716: (26, ( 0, 5)),
  717: (26, ( 1, 1)),
  718: (26, ( 2, 2)),
  719: (26, ( 3, 3)),
  720: (26, ( 4, 4)),
  721: (26, ( 1, 0)),
  722: (26, ( 2, 0)),
  723: (26, ( 3, 0)),
  724: (26, ( 4, 0)),
  725: (26, ( 1,-1)),
  726: (26, ( 2,-2)),
  727: (26, ( 0,-1)),
  728: (26, ( 0,-2)),
  729: (26, (-1,-1)),
  730: (26, (-2,-2)),
  731: (26, (-2, 1)),
  732: (26, (-1, 2)),
  733: (26, ( 1, 2)),
  734: (26, ( 2, 1)),
  735: (26, ( 2,-1)),
  736: (26, ( 1,-2)),
  737: (26, (-1,-2)),
  738: (26, (-2,-1)),
  739: (27, (-1, 0)),
  740: (27, (-2, 0)),
  741: (27, (-3, 0)),
  742: (27, (-1, 1)),
  743: (27, (-2, 2)),
  744: (27, (-3, 3)),
  745: (27, ( 0, 1)),
  746: (27, ( 0, 2)),
  747: (27, ( 0, 3)),
  748: (27, ( 0, 4)),
  749: (27, ( 1, 1)),
  750: (27, ( 2, 2)),
  751: (27, ( 3, 3)),
  752: (27, ( 4, 4)),
  753: (27, ( 1, 0)),
  754: (27, ( 2, 0)),
  755: (27, ( 3, 0)),
  756: (27, ( 4, 0)),
  757: (27, ( 1,-1)),
  758: (27, ( 2,-2)),
  759: (27, ( 3,-3)),
  760: (27, ( 0,-1)),
  761: (27, ( 0,-2)),
  762: (27, ( 0,-3)),
  763: (27, (-1,-1)),
  764: (27, (-2,-2)),
  765: (27, (-3,-3)),
  766: (27, (-2, 1)),
  767: (27, (-1, 2)),
  768: (27, ( 1, 2)),
  769: (27, ( 2, 1)),
  770: (27, ( 2,-1)),
  771: (27, ( 1,-2)),
  772: (27, (-1,-2)),
  773: (27, (-2,-1)),
  774: (28, (-1, 0)),
  775: (28, (-2, 0)),
  776: (28, (-3, 0)),
  777: (28, (-1, 1)),
  778: (28, (-2, 2)),
  779: (28, (-3, 3)),
  780: (28, ( 0, 1)),
  781: (28, ( 0, 2)),
  782: (28, ( 0, 3)),
  783: (28, ( 1, 1)),
  784: (28, ( 2, 2)),
  785: (28, ( 3, 3)),
  786: (28, ( 1, 0)),
  787: (28, ( 2, 0)),
  788: (28, ( 3, 0)),
  789: (28, ( 4, 0)),
  790: (28, ( 1,-1)),
  791: (28, ( 2,-2)),
  792: (28, ( 3,-3)),
  793: (28, ( 4,-4)),
  794: (28, ( 0,-1)),
  795: (28, ( 0,-2)),
  796: (28, ( 0,-3)),
  797: (28, ( 0,-4)),
  798: (28, (-1,-1)),
  799: (28, (-2,-2)),
  800: (28, (-3,-3)),
  801: (28, (-2, 1)),
  802: (28, (-1, 2)),
  803: (28, ( 1, 2)),
  804: (28, ( 2, 1)),
  805: (28, ( 2,-1)),
  806: (28, ( 1,-2)),
  807: (28, (-1,-2)),
  808: (28, (-2,-1)),
  809: (29, (-1, 0)),
  810: (29, (-2, 0)),
  811: (29, (-3, 0)),
  812: (29, (-1, 1)),
  813: (29, (-2, 2)),
  814: (29, ( 0, 1)),
  815: (29, ( 0, 2)),
  816: (29, ( 1, 1)),
  817: (29, ( 2, 2)),
  818: (29, ( 1, 0)),
  819: (29, ( 2, 0)),
  820: (29, ( 3, 0)),
  821: (29, ( 4, 0)),
  822: (29, ( 1,-1)),
  823: (29, ( 2,-2)),
  824: (29, ( 3,-3)),
  825: (29, ( 4,-4)),
  826: (29, ( 0,-1)),
  827: (29, ( 0,-2)),
  828: (29, ( 0,-3)),
  829: (29, ( 0,-4)),
  830: (29, ( 0,-5)),
  831: (29, (-1,-1)),
  832: (29, (-2,-2)),
  833: (29, (-3,-3)),
  834: (29, (-2, 1)),
  835: (29, (-1, 2)),
  836: (29, ( 1, 2)),
  837: (29, ( 2, 1)),
  838: (29, ( 2,-1)),
  839: (29, ( 1,-2)),
  840: (29, (-1,-2)),
  841: (29, (-2,-1)),
  842: (30, (-1, 0)),
  843: (30, (-2, 0)),
  844: (30, (-3, 0)),
  845: (30, (-1, 1)),
  846: (30, ( 0, 1)),
  847: (30, ( 1, 1)),
  848: (30, ( 1, 0)),
  849: (30, ( 2, 0)),
  850: (30, ( 3, 0)),
  851: (30, ( 4, 0)),
  852: (30, ( 1,-1)),
  853: (30, ( 2,-2)),
  854: (30, ( 3,-3)),
  855: (30, ( 4,-4)),
  856: (30, ( 0,-1)),
  857: (30, ( 0,-2)),
  858: (30, ( 0,-3)),
  859: (30, ( 0,-4)),
  860: (30, ( 0,-5)),
  861: (30, ( 0,-6)),
  862: (30, (-1,-1)),
  863: (30, (-2,-2)),
  864: (30, (-3,-3)),
  865: (30, (-2, 1)),
  866: (30, ( 2, 1)),
  867: (30, ( 2,-1)),
  868: (30, ( 1,-2)),
  869: (30, (-1,-2)),
  870: (30, (-2,-1)),
  871: (31, (-1, 0)),
  872: (31, (-2, 0)),
  873: (31, (-3, 0)),
  874: (31, ( 1, 0)),
  875: (31, ( 2, 0)),
  876: (31, ( 3, 0)),
  877: (31, ( 4, 0)),
  878: (31, ( 1,-1)),
  879: (31, ( 2,-2)),
  880: (31, ( 3,-3)),
  881: (31, ( 4,-4)),
  882: (31, ( 0,-1)),
  883: (31, ( 0,-2)),
  884: (31, ( 0,-3)),
  885: (31, ( 0,-4)),
  886: (31, ( 0,-5)),
  887: (31, ( 0,-6)),
  888: (31, ( 0,-7)),
  889: (31, (-1,-1)),
  890: (31, (-2,-2)),
  891: (31, (-3,-3)),
  892: (31, ( 2,-1)),
  893: (31, ( 1,-2)),
  894: (31, (-1,-2)),
  895: (31, (-2,-1)),
  896: (32, (-1, 0)),
  897: (32, (-2, 0)),
  898: (32, (-3, 0)),
  899: (32, (-4, 0)),
  900: (32, (-1, 1)),
  901: (32, (-2, 2)),
  902: (32, (-3, 3)),
  903: (32, (-4, 4)),
  904: (32, ( 0, 1)),
  905: (32, ( 0, 2)),
  906: (32, ( 0, 3)),
  907: (32, ( 0, 4)),
  908: (32, ( 0, 5)),
  909: (32, ( 0, 6)),
  910: (32, ( 0, 7)),
  911: (32, ( 1, 1)),
  912: (32, ( 2, 2)),
  913: (32, ( 3, 3)),
  914: (32, ( 1, 0)),
  915: (32, ( 2, 0)),
  916: (32, ( 3, 0)),
  917: (32, (-2, 1)),
  918: (32, (-1, 2)),
  919: (32, ( 1, 2)),
  920: (32, ( 2, 1)),
  921: (33, (-1, 0)),
  922: (33, (-2, 0)),
  923: (33, (-3, 0)),
  924: (33, (-4, 0)),
  925: (33, (-1, 1)),
  926: (33, (-2, 2)),
  927: (33, (-3, 3)),
  928: (33, (-4, 4)),
  929: (33, ( 0, 1)),
  930: (33, ( 0, 2)),
  931: (33, ( 0, 3)),
  932: (33, ( 0, 4)),
  933: (33, ( 0, 5)),
  934: (33, ( 0, 6)),
  935: (33, ( 1, 1)),
  936: (33, ( 2, 2)),
  937: (33, ( 3, 3)),
  938: (33, ( 1, 0)),
  939: (33, ( 2, 0)),
  940: (33, ( 3, 0)),
  941: (33, ( 1,-1)),
  942: (33, ( 0,-1)),
  943: (33, (-1,-1)),
  944: (33, (-2, 1)),
  945: (33, (-1, 2)),
  946: (33, ( 1, 2)),
  947: (33, ( 2, 1)),
  948: (33, ( 2,-1)),
  949: (33, (-2,-1)),
  950: (34, (-1, 0)),
  951: (34, (-2, 0)),
  952: (34, (-3, 0)),
  953: (34, (-4, 0)),
  954: (34, (-1, 1)),
  955: (34, (-2, 2)),
  956: (34, (-3, 3)),
  957: (34, (-4, 4)),
  958: (34, ( 0, 1)),
  959: (34, ( 0, 2)),
  960: (34, ( 0, 3)),
  961: (34, ( 0, 4)),
  962: (34, ( 0, 5)),
  963: (34, ( 1, 1)),
  964: (34, ( 2, 2)),
  965: (34, ( 3, 3)),
  966: (34, ( 1, 0)),
  967: (34, ( 2, 0)),
  968: (34, ( 3, 0)),
  969: (34, ( 1,-1)),
  970: (34, ( 2,-2)),
  971: (34, ( 0,-1)),
  972: (34, ( 0,-2)),
  973: (34, (-1,-1)),
  974: (34, (-2,-2)),
  975: (34, (-2, 1)),
  976: (34, (-1, 2)),
  977: (34, ( 1, 2)),
  978: (34, ( 2, 1)),
  979: (34, ( 2,-1)),
  980: (34, ( 1,-2)),
  981: (34, (-1,-2)),
  982: (34, (-2,-1)),
  983: (35, (-1, 0)),
  984: (35, (-2, 0)),
  985: (35, (-3, 0)),
  986: (35, (-4, 0)),
  987: (35, (-1, 1)),
  988: (35, (-2, 2)),
  989: (35, (-3, 3)),
  990: (35, (-4, 4)),
  991: (35, ( 0, 1)),
  992: (35, ( 0, 2)),
  993: (35, ( 0, 3)),
  994: (35, ( 0, 4)),
  995: (35, ( 1, 1)),
  996: (35, ( 2, 2)),
  997: (35, ( 3, 3)),
  998: (35, ( 1, 0)),
  999: (35, ( 2, 0)),
  1000: (35, ( 3, 0)),
  1001: (35, ( 1,-1)),
  1002: (35, ( 2,-2)),
  1003: (35, ( 3,-3)),
  1004: (35, ( 0,-1)),
  1005: (35, ( 0,-2)),
  1006: (35, ( 0,-3)),
  1007: (35, (-1,-1)),
  1008: (35, (-2,-2)),
  1009: (35, (-3,-3)),
  1010: (35, (-2, 1)),
  1011: (35, (-1, 2)),
  1012: (35, ( 1, 2)),
  1013: (35, ( 2, 1)),
  1014: (35, ( 2,-1)),
  1015: (35, ( 1,-2)),
  1016: (35, (-1,-2)),
  1017: (35, (-2,-1)),
  1018: (36, (-1, 0)),
  1019: (36, (-2, 0)),
  1020: (36, (-3, 0)),
  1021: (36, (-4, 0)),
  1022: (36, (-1, 1)),
  1023: (36, (-2, 2)),
  1024: (36, (-3, 3)),
  1025: (36, ( 0, 1)),
  1026: (36, ( 0, 2)),
  1027: (36, ( 0, 3)),
  1028: (36, ( 1, 1)),
  1029: (36, ( 2, 2)),
  1030: (36, ( 3, 3)),
  1031: (36, ( 1, 0)),
  1032: (36, ( 2, 0)),
  1033: (36, ( 3, 0)),
  1034: (36, ( 1,-1)),
  1035: (36, ( 2,-2)),
  1036: (36, ( 3,-3)),
  1037: (36, ( 0,-1)),
  1038: (36, ( 0,-2)),
  1039: (36, ( 0,-3)),
  1040: (36, ( 0,-4)),
  1041: (36, (-1,-1)),
  1042: (36, (-2,-2)),
  1043: (36, (-3,-3)),
  1044: (36, (-4,-4)),
  1045: (36, (-2, 1)),
  1046: (36, (-1, 2)),
  1047: (36, ( 1, 2)),
  1048: (36, ( 2, 1)),
  1049: (36, ( 2,-1)),
  1050: (36, ( 1,-2)),
  1051: (36, (-1,-2)),
  1052: (36, (-2,-1)),
  1053: (37, (-1, 0)),
  1054: (37, (-2, 0)),
  1055: (37, (-3, 0)),
  1056: (37, (-4, 0)),
  1057: (37, (-1, 1)),
  1058: (37, (-2, 2)),
  1059: (37, ( 0, 1)),
  1060: (37, ( 0, 2)),
  1061: (37, ( 1, 1)),
  1062: (37, ( 2, 2)),
  1063: (37, ( 1, 0)),
  1064: (37, ( 2, 0)),
  1065: (37, ( 3, 0)),
  1066: (37, ( 1,-1)),
  1067: (37, ( 2,-2)),
  1068: (37, ( 3,-3)),
  1069: (37, ( 0,-1)),
  1070: (37, ( 0,-2)),
  1071: (37, ( 0,-3)),
  1072: (37, ( 0,-4)),
  1073: (37, ( 0,-5)),
  1074: (37, (-1,-1)),
  1075: (37, (-2,-2)),
  1076: (37, (-3,-3)),
  1077: (37, (-4,-4)),
  1078: (37, (-2, 1)),
  1079: (37, (-1, 2)),
  1080: (37, ( 1, 2)),
  1081: (37, ( 2, 1)),
  1082: (37, ( 2,-1)),
  1083: (37, ( 1,-2)),
  1084: (37, (-1,-2)),
  1085: (37, (-2,-1)),
  1086: (38, (-1, 0)),
  1087: (38, (-2, 0)),
  1088: (38, (-3, 0)),
  1089: (38, (-4, 0)),
  1090: (38, (-1, 1)),
  1091: (38, ( 0, 1)),
  1092: (38, ( 1, 1)),
  1093: (38, ( 1, 0)),
  1094: (38, ( 2, 0)),
  1095: (38, ( 3, 0)),
  1096: (38, ( 1,-1)),
  1097: (38, ( 2,-2)),
  1098: (38, ( 3,-3)),
  1099: (38, ( 0,-1)),
  1100: (38, ( 0,-2)),
  1101: (38, ( 0,-3)),
  1102: (38, ( 0,-4)),
  1103: (38, ( 0,-5)),
  1104: (38, ( 0,-6)),
  1105: (38, (-1,-1)),
  1106: (38, (-2,-2)),
  1107: (38, (-3,-3)),
  1108: (38, (-4,-4)),
  1109: (38, (-2, 1)),
  1110: (38, ( 2, 1)),
  1111: (38, ( 2,-1)),
  1112: (38, ( 1,-2)),
  1113: (38, (-1,-2)),
  1114: (38, (-2,-1)),
  1115: (39, (-1, 0)),
  1116: (39, (-2, 0)),
  1117: (39, (-3, 0)),
  1118: (39, (-4, 0)),
  1119: (39, ( 1, 0)),
  1120: (39, ( 2, 0)),
  1121: (39, ( 3, 0)),
  1122: (39, ( 1,-1)),
  1123: (39, ( 2,-2)),
  1124: (39, ( 3,-3)),
  1125: (39, ( 0,-1)),
  1126: (39, ( 0,-2)),
  1127: (39, ( 0,-3)),
  1128: (39, ( 0,-4)),
  1129: (39, ( 0,-5)),
  1130: (39, ( 0,-6)),
  1131: (39, ( 0,-7)),
  1132: (39, (-1,-1)),
  1133: (39, (-2,-2)),
  1134: (39, (-3,-3)),
  1135: (39, (-4,-4)),
  1136: (39, ( 2,-1)),
  1137: (39, ( 1,-2)),
  1138: (39, (-1,-2)),
  1139: (39, (-2,-1)),
  1140: (40, (-1, 0)),
  1141: (40, (-2, 0)),
  1142: (40, (-3, 0)),
  1143: (40, (-4, 0)),
  1144: (40, (-5, 0)),
  1145: (40, (-1, 1)),
  1146: (40, (-2, 2)),
  1147: (40, (-3, 3)),
  1148: (40, (-4, 4)),
  1149: (40, (-5, 5)),
  1150: (40, ( 0, 1)),
  1151: (40, ( 0, 2)),
  1152: (40, ( 0, 3)),
  1153: (40, ( 0, 4)),
  1154: (40, ( 0, 5)),
  1155: (40, ( 0, 6)),
  1156: (40, ( 0, 7)),
  1157: (40, ( 1, 1)),
  1158: (40, ( 2, 2)),
  1159: (40, ( 1, 0)),
  1160: (40, ( 2, 0)),
  1161: (40, (-2, 1)),
  1162: (40, (-1, 2)),
  1163: (40, ( 1, 2)),
  1164: (40, ( 2, 1)),
  1165: (41, (-1, 0)),
  1166: (41, (-2, 0)),
  1167: (41, (-3, 0)),
  1168: (41, (-4, 0)),
  1169: (41, (-5, 0)),
  1170: (41, (-1, 1)),
  1171: (41, (-2, 2)),
  1172: (41, (-3, 3)),
  1173: (41, (-4, 4)),
  1174: (41, (-5, 5)),
  1175: (41, ( 0, 1)),
  1176: (41, ( 0, 2)),
  1177: (41, ( 0, 3)),
  1178: (41, ( 0, 4)),
  1179: (41, ( 0, 5)),
  1180: (41, ( 0, 6)),
  1181: (41, ( 1, 1)),
  1182: (41, ( 2, 2)),
  1183: (41, ( 1, 0)),
  1184: (41, ( 2, 0)),
  1185: (41, ( 1,-1)),
  1186: (41, ( 0,-1)),
  1187: (41, (-1,-1)),
  1188: (41, (-2, 1)),
  1189: (41, (-1, 2)),
  1190: (41, ( 1, 2)),
  1191: (41, ( 2, 1)),
  1192: (41, ( 2,-1)),
  1193: (41, (-2,-1)),
  1194: (42, (-1, 0)),
  1195: (42, (-2, 0)),
  1196: (42, (-3, 0)),
  1197: (42, (-4, 0)),
  1198: (42, (-5, 0)),
  1199: (42, (-1, 1)),
  1200: (42, (-2, 2)),
  1201: (42, (-3, 3)),
  1202: (42, (-4, 4)),
  1203: (42, (-5, 5)),
  1204: (42, ( 0, 1)),
  1205: (42, ( 0, 2)),
  1206: (42, ( 0, 3)),
  1207: (42, ( 0, 4)),
  1208: (42, ( 0, 5)),
  1209: (42, ( 1, 1)),
  1210: (42, ( 2, 2)),
  1211: (42, ( 1, 0)),
  1212: (42, ( 2, 0)),
  1213: (42, ( 1,-1)),
  1214: (42, ( 2,-2)),
  1215: (42, ( 0,-1)),
  1216: (42, ( 0,-2)),
  1217: (42, (-1,-1)),
  1218: (42, (-2,-2)),
  1219: (42, (-2, 1)),
  1220: (42, (-1, 2)),
  1221: (42, ( 1, 2)),
  1222: (42, ( 2, 1)),
  1223: (42, ( 2,-1)),
  1224: (42, ( 1,-2)),
  1225: (42, (-1,-2)),
  1226: (42, (-2,-1)),
  1227: (43, (-1, 0)),
  1228: (43, (-2, 0)),
  1229: (43, (-3, 0)),
  1230: (43, (-4, 0)),
  1231: (43, (-5, 0)),
  1232: (43, (-1, 1)),
  1233: (43, (-2, 2)),
  1234: (43, (-3, 3)),
  1235: (43, (-4, 4)),
  1236: (43, ( 0, 1)),
  1237: (43, ( 0, 2)),
  1238: (43, ( 0, 3)),
  1239: (43, ( 0, 4)),
  1240: (43, ( 1, 1)),
  1241: (43, ( 2, 2)),
  1242: (43, ( 1, 0)),
  1243: (43, ( 2, 0)),
  1244: (43, ( 1,-1)),
  1245: (43, ( 2,-2)),
  1246: (43, ( 0,-1)),
  1247: (43, ( 0,-2)),
  1248: (43, ( 0,-3)),
  1249: (43, (-1,-1)),
  1250: (43, (-2,-2)),
  1251: (43, (-3,-3)),
  1252: (43, (-2, 1)),
  1253: (43, (-1, 2)),
  1254: (43, ( 1, 2)),
  1255: (43, ( 2, 1)),
  1256: (43, ( 2,-1)),
  1257: (43, ( 1,-2)),
  1258: (43, (-1,-2)),
  1259: (43, (-2,-1)),
  1260: (44, (-1, 0)),
  1261: (44, (-2, 0)),
  1262: (44, (-3, 0)),
  1263: (44, (-4, 0)),
  1264: (44, (-5, 0)),
  1265: (44, (-1, 1)),
  1266: (44, (-2, 2)),
  1267: (44, (-3, 3)),
  1268: (44, ( 0, 1)),
  1269: (44, ( 0, 2)),
  1270: (44, ( 0, 3)),
  1271: (44, ( 1, 1)),
  1272: (44, ( 2, 2)),
  1273: (44, ( 1, 0)),
  1274: (44, ( 2, 0)),
  1275: (44, ( 1,-1)),
  1276: (44, ( 2,-2)),
  1277: (44, ( 0,-1)),
  1278: (44, ( 0,-2)),
  1279: (44, ( 0,-3)),
  1280: (44, ( 0,-4)),
  1281: (44, (-1,-1)),
  1282: (44, (-2,-2)),
  1283: (44, (-3,-3)),
  1284: (44, (-4,-4)),
  1285: (44, (-2, 1)),
  1286: (44, (-1, 2)),
  1287: (44, ( 1, 2)),
  1288: (44, ( 2, 1)),
  1289: (44, ( 2,-1)),
  1290: (44, ( 1,-2)),
  1291: (44, (-1,-2)),
  1292: (44, (-2,-1)),
  1293: (45, (-1, 0)),
  1294: (45, (-2, 0)),
  1295: (45, (-3, 0)),
  1296: (45, (-4, 0)),
  1297: (45, (-5, 0)),
  1298: (45, (-1, 1)),
  1299: (45, (-2, 2)),
  1300: (45, ( 0, 1)),
  1301: (45, ( 0, 2)),
  1302: (45, ( 1, 1)),
  1303: (45, ( 2, 2)),
  1304: (45, ( 1, 0)),
  1305: (45, ( 2, 0)),
  1306: (45, ( 1,-1)),
  1307: (45, ( 2,-2)),
  1308: (45, ( 0,-1)),
  1309: (45, ( 0,-2)),
  1310: (45, ( 0,-3)),
  1311: (45, ( 0,-4)),
  1312: (45, ( 0,-5)),
  1313: (45, (-1,-1)),
  1314: (45, (-2,-2)),
  1315: (45, (-3,-3)),
  1316: (45, (-4,-4)),
  1317: (45, (-5,-5)),
  1318: (45, (-2, 1)),
  1319: (45, (-1, 2)),
  1320: (45, ( 1, 2)),
  1321: (45, ( 2, 1)),
  1322: (45, ( 2,-1)),
  1323: (45, ( 1,-2)),
  1324: (45, (-1,-2)),
  1325: (45, (-2,-1)),
  1326: (46, (-1, 0)),
  1327: (46, (-2, 0)),
  1328: (46, (-3, 0)),
  1329: (46, (-4, 0)),
  1330: (46, (-5, 0)),
  1331: (46, (-1, 1)),
  1332: (46, ( 0, 1)),
  1333: (46, ( 1, 1)),
  1334: (46, ( 1, 0)),
  1335: (46, ( 2, 0)),
  1336: (46, ( 1,-1)),
  1337: (46, ( 2,-2)),
  1338: (46, ( 0,-1)),
  1339: (46, ( 0,-2)),
  1340: (46, ( 0,-3)),
  1341: (46, ( 0,-4)),
  1342: (46, ( 0,-5)),
  1343: (46, ( 0,-6)),
  1344: (46, (-1,-1)),
  1345: (46, (-2,-2)),
  1346: (46, (-3,-3)),
  1347: (46, (-4,-4)),
  1348: (46, (-5,-5)),
  1349: (46, (-2, 1)),
  1350: (46, ( 2, 1)),
  1351: (46, ( 2,-1)),
  1352: (46, ( 1,-2)),
  1353: (46, (-1,-2)),
  1354: (46, (-2,-1)),
  1355: (47, (-1, 0)),
  1356: (47, (-2, 0)),
  1357: (47, (-3, 0)),
  1358: (47, (-4, 0)),
  1359: (47, (-5, 0)),
  1360: (47, ( 1, 0)),
  1361: (47, ( 2, 0)),
  1362: (47, ( 1,-1)),
  1363: (47, ( 2,-2)),
  1364: (47, ( 0,-1)),
  1365: (47, ( 0,-2)),
  1366: (47, ( 0,-3)),
  1367: (47, ( 0,-4)),
  1368: (47, ( 0,-5)),
  1369: (47, ( 0,-6)),
  1370: (47, ( 0,-7)),
  1371: (47, (-1,-1)),
  1372: (47, (-2,-2)),
  1373: (47, (-3,-3)),
  1374: (47, (-4,-4)),
  1375: (47, (-5,-5)),
  1376: (47, ( 2,-1)),
  1377: (47, ( 1,-2)),
  1378: (47, (-1,-2)),
  1379: (47, (-2,-1)),
  1380: (48, (-1, 0)),
  1381: (48, (-2, 0)),
  1382: (48, (-3, 0)),
  1383: (48, (-4, 0)),
  1384: (48, (-5, 0)),
  1385: (48, (-6, 0)),
  1386: (48, (-1, 1)),
  1387: (48, (-2, 2)),
  1388: (48, (-3, 3)),
  1389: (48, (-4, 4)),
  1390: (48, (-5, 5)),
  1391: (48, (-6, 6)),
  1392: (48, ( 0, 1)),
  1393: (48, ( 0, 2)),
  1394: (48, ( 0, 3)),
  1395: (48, ( 0, 4)),
  1396: (48, ( 0, 5)),
  1397: (48, ( 0, 6)),
  1398: (48, ( 0, 7)),
  1399: (48, ( 1, 1)),
  1400: (48, ( 1, 0)),
  1401: (48, (-2, 1)),
  1402: (48, (-1, 2)),
  1403: (48, ( 1, 2)),
  1404: (49, (-1, 0)),
  1405: (49, (-2, 0)),
  1406: (49, (-3, 0)),
  1407: (49, (-4, 0)),
  1408: (49, (-5, 0)),
  1409: (49, (-6, 0)),
  1410: (49, (-1, 1)),
  1411: (49, (-2, 2)),
  1412: (49, (-3, 3)),
  1413: (49, (-4, 4)),
  1414: (49, (-5, 5)),
  1415: (49, (-6, 6)),
  1416: (49, ( 0, 1)),
  1417: (49, ( 0, 2)),
  1418: (49, ( 0, 3)),
  1419: (49, ( 0, 4)),
  1420: (49, ( 0, 5)),
  1421: (49, ( 0, 6)),
  1422: (49, ( 1, 1)),
  1423: (49, ( 1, 0)),
  1424: (49, ( 1,-1)),
  1425: (49, ( 0,-1)),
  1426: (49, (-1,-1)),
  1427: (49, (-2, 1)),
  1428: (49, (-1, 2)),
  1429: (49, ( 1, 2)),
  1430: (49, (-2,-1)),
  1431: (50, (-1, 0)),
  1432: (50, (-2, 0)),
  1433: (50, (-3, 0)),
  1434: (50, (-4, 0)),
  1435: (50, (-5, 0)),
  1436: (50, (-6, 0)),
  1437: (50, (-1, 1)),
  1438: (50, (-2, 2)),
  1439: (50, (-3, 3)),
  1440: (50, (-4, 4)),
  1441: (50, (-5, 5)),
  1442: (50, ( 0, 1)),
  1443: (50, ( 0, 2)),
  1444: (50, ( 0, 3)),
  1445: (50, ( 0, 4)),
  1446: (50, ( 0, 5)),
  1447: (50, ( 1, 1)),
  1448: (50, ( 1, 0)),
  1449: (50, ( 1,-1)),
  1450: (50, ( 0,-1)),
  1451: (50, ( 0,-2)),
  1452: (50, (-1,-1)),
  1453: (50, (-2,-2)),
  1454: (50, (-2, 1)),
  1455: (50, (-1, 2)),
  1456: (50, ( 1, 2)),
  1457: (50, ( 1,-2)),
  1458: (50, (-1,-2)),
  1459: (50, (-2,-1)),
  1460: (51, (-1, 0)),
  1461: (51, (-2, 0)),
  1462: (51, (-3, 0)),
  1463: (51, (-4, 0)),
  1464: (51, (-5, 0)),
  1465: (51, (-6, 0)),
  1466: (51, (-1, 1)),
  1467: (51, (-2, 2)),
  1468: (51, (-3, 3)),
  1469: (51, (-4, 4)),
  1470: (51, ( 0, 1)),
  1471: (51, ( 0, 2)),
  1472: (51, ( 0, 3)),
  1473: (51, ( 0, 4)),
  1474: (51, ( 1, 1)),
  1475: (51, ( 1, 0)),
  1476: (51, ( 1,-1)),
  1477: (51, ( 0,-1)),
  1478: (51, ( 0,-2)),
  1479: (51, ( 0,-3)),
  1480: (51, (-1,-1)),
  1481: (51, (-2,-2)),
  1482: (51, (-3,-3)),
  1483: (51, (-2, 1)),
  1484: (51, (-1, 2)),
  1485: (51, ( 1, 2)),
  1486: (51, ( 1,-2)),
  1487: (51, (-1,-2)),
  1488: (51, (-2,-1)),
  1489: (52, (-1, 0)),
  1490: (52, (-2, 0)),
  1491: (52, (-3, 0)),
  1492: (52, (-4, 0)),
  1493: (52, (-5, 0)),
  1494: (52, (-6, 0)),
  1495: (52, (-1, 1)),
  1496: (52, (-2, 2)),
  1497: (52, (-3, 3)),
  1498: (52, ( 0, 1)),
  1499: (52, ( 0, 2)),
  1500: (52, ( 0, 3)),
  1501: (52, ( 1, 1)),
  1502: (52, ( 1, 0)),
  1503: (52, ( 1,-1)),
  1504: (52, ( 0,-1)),
  1505: (52, ( 0,-2)),
  1506: (52, ( 0,-3)),
  1507: (52, ( 0,-4)),
  1508: (52, (-1,-1)),
  1509: (52, (-2,-2)),
  1510: (52, (-3,-3)),
  1511: (52, (-4,-4)),
  1512: (52, (-2, 1)),
  1513: (52, (-1, 2)),
  1514: (52, ( 1, 2)),
  1515: (52, ( 1,-2)),
  1516: (52, (-1,-2)),
  1517: (52, (-2,-1)),
  1518: (53, (-1, 0)),
  1519: (53, (-2, 0)),
  1520: (53, (-3, 0)),
  1521: (53, (-4, 0)),
  1522: (53, (-5, 0)),
  1523: (53, (-6, 0)),
  1524: (53, (-1, 1)),
  1525: (53, (-2, 2)),
  1526: (53, ( 0, 1)),
  1527: (53, ( 0, 2)),
  1528: (53, ( 1, 1)),
  1529: (53, ( 1, 0)),
  1530: (53, ( 1,-1)),
  1531: (53, ( 0,-1)),
  1532: (53, ( 0,-2)),
  1533: (53, ( 0,-3)),
  1534: (53, ( 0,-4)),
  1535: (53, ( 0,-5)),
  1536: (53, (-1,-1)),
  1537: (53, (-2,-2)),
  1538: (53, (-3,-3)),
  1539: (53, (-4,-4)),
  1540: (53, (-5,-5)),
  1541: (53, (-2, 1)),
  1542: (53, (-1, 2)),
  1543: (53, ( 1, 2)),
  1544: (53, ( 1,-2)),
  1545: (53, (-1,-2)),
  1546: (53, (-2,-1)),
  1547: (54, (-1, 0)),
  1548: (54, (-2, 0)),
  1549: (54, (-3, 0)),
  1550: (54, (-4, 0)),
  1551: (54, (-5, 0)),
  1552: (54, (-6, 0)),
  1553: (54, (-1, 1)),
  1554: (54, ( 0, 1)),
  1555: (54, ( 1, 1)),
  1556: (54, ( 1, 0)),
  1557: (54, ( 1,-1)),
  1558: (54, ( 0,-1)),
  1559: (54, ( 0,-2)),
  1560: (54, ( 0,-3)),
  1561: (54, ( 0,-4)),
  1562: (54, ( 0,-5)),
  1563: (54, ( 0,-6)),
  1564: (54, (-1,-1)),
  1565: (54, (-2,-2)),
  1566: (54, (-3,-3)),
  1567: (54, (-4,-4)),
  1568: (54, (-5,-5)),
  1569: (54, (-6,-6)),
  1570: (54, (-2, 1)),
  1571: (54, ( 1,-2)),
  1572: (54, (-1,-2)),
  1573: (54, (-2,-1)),
  1574: (55, (-1, 0)),
  1575: (55, (-2, 0)),
  1576: (55, (-3, 0)),
  1577: (55, (-4, 0)),
  1578: (55, (-5, 0)),
  1579: (55, (-6, 0)),
  1580: (55, ( 1, 0)),
  1581: (55, ( 1,-1)),
  1582: (55, ( 0,-1)),
  1583: (55, ( 0,-2)),
  1584: (55, ( 0,-3)),
  1585: (55, ( 0,-4)),
  1586: (55, ( 0,-5)),
  1587: (55, ( 0,-6)),
  1588: (55, ( 0,-7)),
  1589: (55, (-1,-1)),
  1590: (55, (-2,-2)),
  1591: (55, (-3,-3)),
  1592: (55, (-4,-4)),
  1593: (55, (-5,-5)),
  1594: (55, (-6,-6)),
  1595: (55, ( 1,-2)),
  1596: (55, (-1,-2)),
  1597: (55, (-2,-1)),
  1598: (56, (-1, 0)),
  1599: (56, (-2, 0)),
  1600: (56, (-3, 0)),
  1601: (56, (-4, 0)),
  1602: (56, (-5, 0)),
  1603: (56, (-6, 0)),
  1604: (56, (-7, 0)),
  1605: (56, (-1, 1)),
  1606: (56, (-2, 2)),
  1607: (56, (-3, 3)),
  1608: (56, (-4, 4)),
  1609: (56, (-5, 5)),
  1610: (56, (-6, 6)),
  1611: (56, (-7, 7)),
  1612: (56, ( 0, 1)),
  1613: (56, ( 0, 2)),
  1614: (56, ( 0, 3)),
  1615: (56, ( 0, 4)),
  1616: (56, ( 0, 5)),
  1617: (56, ( 0, 6)),
  1618: (56, ( 0, 7)),
  1619: (56, (-2, 1)),
  1620: (56, (-1, 2)),
  1621: (57, (-1, 0)),
  1622: (57, (-2, 0)),
  1623: (57, (-3, 0)),
  1624: (57, (-4, 0)),
  1625: (57, (-5, 0)),
  1626: (57, (-6, 0)),
  1627: (57, (-7, 0)),
  1628: (57, (-1, 1)),
  1629: (57, (-2, 2)),
  1630: (57, (-3, 3)),
  1631: (57, (-4, 4)),
  1632: (57, (-5, 5)),
  1633: (57, (-6, 6)),
  1634: (57, ( 0, 1)),
  1635: (57, ( 0, 2)),
  1636: (57, ( 0, 3)),
  1637: (57, ( 0, 4)),
  1638: (57, ( 0, 5)),
  1639: (57, ( 0, 6)),
  1640: (57, ( 0,-1)),
  1641: (57, (-1,-1)),
  1642: (57, (-2, 1)),
  1643: (57, (-1, 2)),
  1644: (57, (-2,-1)),
  1645: (58, (-1, 0)),
  1646: (58, (-2, 0)),
  1647: (58, (-3, 0)),
  1648: (58, (-4, 0)),
  1649: (58, (-5, 0)),
  1650: (58, (-6, 0)),
  1651: (58, (-7, 0)),
  1652: (58, (-1, 1)),
  1653: (58, (-2, 2)),
  1654: (58, (-3, 3)),
  1655: (58, (-4, 4)),
  1656: (58, (-5, 5)),
  1657: (58, ( 0, 1)),
  1658: (58, ( 0, 2)),
  1659: (58, ( 0, 3)),
  1660: (58, ( 0, 4)),
  1661: (58, ( 0, 5)),
  1662: (58, ( 0,-1)),
  1663: (58, ( 0,-2)),
  1664: (58, (-1,-1)),
  1665: (58, (-2,-2)),
  1666: (58, (-2, 1)),
  1667: (58, (-1, 2)),
  1668: (58, (-1,-2)),
  1669: (58, (-2,-1)),
  1670: (59, (-1, 0)),
  1671: (59, (-2, 0)),
  1672: (59, (-3, 0)),
  1673: (59, (-4, 0)),
  1674: (59, (-5, 0)),
  1675: (59, (-6, 0)),
  1676: (59, (-7, 0)),
  1677: (59, (-1, 1)),
  1678: (59, (-2, 2)),
  1679: (59, (-3, 3)),
  1680: (59, (-4, 4)),
  1681: (59, ( 0, 1)),
  1682: (59, ( 0, 2)),
  1683: (59, ( 0, 3)),
  1684: (59, ( 0, 4)),
  1685: (59, ( 0,-1)),
  1686: (59, ( 0,-2)),
  1687: (59, ( 0,-3)),
  1688: (59, (-1,-1)),
  1689: (59, (-2,-2)),
  1690: (59, (-3,-3)),
  1691: (59, (-2, 1)),
  1692: (59, (-1, 2)),
  1693: (59, (-1,-2)),
  1694: (59, (-2,-1)),
  1695: (60, (-1, 0)),
  1696: (60, (-2, 0)),
  1697: (60, (-3, 0)),
  1698: (60, (-4, 0)),
  1699: (60, (-5, 0)),
  1700: (60, (-6, 0)),
  1701: (60, (-7, 0)),
  1702: (60, (-1, 1)),
  1703: (60, (-2, 2)),
  1704: (60, (-3, 3)),
  1705: (60, ( 0, 1)),
  1706: (60, ( 0, 2)),
  1707: (60, ( 0, 3)),
  1708: (60, ( 0,-1)),
  1709: (60, ( 0,-2)),
  1710: (60, ( 0,-3)),
  1711: (60, ( 0,-4)),
  1712: (60, (-1,-1)),
  1713: (60, (-2,-2)),
  1714: (60, (-3,-3)),
  1715: (60, (-4,-4)),
  1716: (60, (-2, 1)),
  1717: (60, (-1, 2)),
  1718: (60, (-1,-2)),
  1719: (60, (-2,-1)),
  1720: (61, (-1, 0)),
  1721: (61, (-2, 0)),
  1722: (61, (-3, 0)),
  1723: (61, (-4, 0)),
  1724: (61, (-5, 0)),
  1725: (61, (-6, 0)),
  1726: (61, (-7, 0)),
  1727: (61, (-1, 1)),
  1728: (61, (-2, 2)),
  1729: (61, ( 0, 1)),
  1730: (61, ( 0, 2)),
  1731: (61, ( 0,-1)),
  1732: (61, ( 0,-2)),
  1733: (61, ( 0,-3)),
  1734: (61, ( 0,-4)),
  1735: (61, ( 0,-5)),
  1736: (61, (-1,-1)),
  1737: (61, (-2,-2)),
  1738: (61, (-3,-3)),
  1739: (61, (-4,-4)),
  1740: (61, (-5,-5)),
  1741: (61, (-2, 1)),
  1742: (61, (-1, 2)),
  1743: (61, (-1,-2)),
  1744: (61, (-2,-1)),
  1745: (62, (-1, 0)),
  1746: (62, (-2, 0)),
  1747: (62, (-3, 0)),
  1748: (62, (-4, 0)),
  1749: (62, (-5, 0)),
  1750: (62, (-6, 0)),
  1751: (62, (-7, 0)),
  1752: (62, (-1, 1)),
  1753: (62, ( 0, 1)),
  1754: (62, ( 0,-1)),
  1755: (62, ( 0,-2)),
  1756: (62, ( 0,-3)),
  1757: (62, ( 0,-4)),
  1758: (62, ( 0,-5)),
  1759: (62, ( 0,-6)),
  1760: (62, (-1,-1)),
  1761: (62, (-2,-2)),
  1762: (62, (-3,-3)),
  1763: (62, (-4,-4)),
  1764: (62, (-5,-5)),
  1765: (62, (-6,-6)),
  1766: (62, (-2, 1)),
  1767: (62, (-1,-2)),
  1768: (62, (-2,-1)),
  1769: (63, (-1, 0)),
  1770: (63, (-2, 0)),
  1771: (63, (-3, 0)),
  1772: (63, (-4, 0)),
  1773: (63, (-5, 0)),
  1774: (63, (-6, 0)),
  1775: (63, (-7, 0)),
  1776: (63, ( 0,-1)),
  1777: (63, ( 0,-2)),
  1778: (63, ( 0,-3)),
  1779: (63, ( 0,-4)),
  1780: (63, ( 0,-5)),
  1781: (63, ( 0,-6)),
  1782: (63, ( 0,-7)),
  1783: (63, (-1,-1)),
  1784: (63, (-2,-2)),
  1785: (63, (-3,-3)),
  1786: (63, (-4,-4)),
  1787: (63, (-5,-5)),
  1788: (63, (-6,-6)),
  1789: (63, (-7,-7)),
  1790: (63, (-1,-2)),
  1791: (63, (-2,-1)),
}

def encode_move_type_dim1(move: Move):
  frow, fcol = move.from_square // 8, move.from_square % 8
  trow, tcol = move.to_square // 8, move.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP[(rowd, cold)]
  return move_dim

def encode_move_type_dim2(move: Move, my_color: Color):
  if not my_color: # black
    m = Move(63 - move.from_square, 63 - move.to_square)
  else:
    m = move
  frow, fcol = m.from_square // 8, m.from_square % 8
  trow, tcol = m.to_square // 8, m.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP[(rowd, cold)]
  return move_dim

def encode_move_type_dim3(move: Optional[Move], my_color: Color):
  if not my_color: # black
    m = Move(63 - move.from_square, 63 - move.to_square)
  else:
    m = move
  frow, fcol = m.from_square // 8, m.from_square % 8
  trow, tcol = m.to_square // 8, m.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP_MAP[m.from_square][(rowd, cold)]
  return move_dim

def decode_move_dim1(from_square, move_type):
  x,  y  = from_square // 8, from_square % 8
  dx, dy = INV_MOVE_MAP[move_type]
  to_square = (x + dx) * 8 + y + dy
  # invalid move, return None
  if to_square < 0 or to_square >= 64:
    return None
  #ignore underpromotion and promotion
  return Move(from_square, to_square)

def decode_move_dim2(from_square, move_type, my_color: Color):
  if not my_color: # black
    fs = 63 - from_square
  else:
    fs = from_square
  dx, dy = INV_MOVE_MAP[move_type]
  if not my_color:
    dx, dy = dx * -1, dy * -1
  x, y   = fs // 8, fs % 8
  to_square = (x + dx) * 8 + y + dy
  # invalid move, return None
  if to_square < 0 or to_square >= 64:
    return None
  #ignore underpromotion and promotion
  return Move(fs, to_square)

def decode_move_dim3(idx, my_color: Color):
  (from_square, (dx, dy)) = INV_MOVE_MAP_MAP[idx]
  if not my_color: # black
    from_square = 63 - from_square
    dx, dy = dx * -1, dy * -1
  x, y = from_square // 8, from_square % 8
  to_square = (x + dx) * 8 +y + dy
  assert(to_square >= 0 and to_square < 64)
  return Move(from_square, to_square)

def move_to_action_index1(move: Move):
  frow, fcol = move.from_square // 8, move.from_square % 8
  trow, tcol = move.to_square // 8, move.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP[(rowd, cold)]
  return move.from_square * 64 + move_dim

def move_to_action_index2(move: Move, my_color: Color):
  if not my_color: # black
    m = Move(63 - move.from_square, 63 - move.to_square)
  else:
    m = move
  frow, fcol = m.from_square // 8, m.from_square % 8
  trow, tcol = m.to_square // 8, m.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP[(rowd, cold)]
  return m.from_square * 64 + move_dim

def move_to_action_index3(move: Move, my_color: Color):
  if not my_color: # black
    m = Move(63 - move.from_square, 63 - move.to_square)
  else:
    m = move
  frow, fcol = m.from_square // 8, m.from_square % 8
  trow, tcol = m.to_square // 8, m.to_square % 8
  rowd, cold = trow - frow, tcol - fcol
  move_dim = MOVE_MAP_MAP[m.from_square][(rowd, cold)]
  return move_dim

def sense_idx_to_square(idx):
  if   idx >= 30:
    return idx - 30 + 49
  elif idx >= 24:
    return idx - 24 + 41
  elif idx >= 18:
    return idx - 18 + 33
  elif idx >= 12:
    return idx - 12 + 25
  elif idx >= 6:
    return idx - 6 + 17
  else:
    return idx + 9

def is_valid_square_for_sense_idx(s: Square):
  if s < 8 or s >= 56:
    return False
  if s % 8 == 0:
    return False
  if (s + 1) % 8 == 0:
    return False
  return True

# assume square is encodable into sense index
def square_to_sense_idx(s: Square):
  if   s >= 49:
    return s - 49 + 30
  elif s >= 41:
    return s - 41 + 24
  elif s >= 33:
    return s - 33 + 18
  elif s >= 25:
    return s - 25 + 12
  elif s >= 17:
    return s - 17 + 6
  else:
    return s - 9
